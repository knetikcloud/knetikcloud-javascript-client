/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AmazonS3Activity from '../model/AmazonS3Activity';
import Result from '../model/Result';

/**
* AmazonWebServicesS3 service.
* @module api/AmazonWebServicesS3Api
* @version 3.0.7
*/
export default class AmazonWebServicesS3Api {

    /**
    * Constructs a new AmazonWebServicesS3Api. 
    * @alias module:api/AmazonWebServicesS3Api
    * @class
    * @param {module:ApiClient} apiClient Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Get a signed S3 URL
     * Requires the file name and file content type (i.e., &#39;video/mpeg&#39;)
     * @param {Object} opts Optional parameters
     * @param {String} opts.filename The file name
     * @param {String} opts.contentType The content type
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AmazonS3Activity} and HTTP response
     */
    getSignedS3URLWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'filename': opts['filename'],
        'content_type': opts['contentType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AmazonS3Activity;

      return this.apiClient.callApi(
        '/amazon/s3/signedposturl', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Get a signed S3 URL
     * Requires the file name and file content type (i.e., &#39;video/mpeg&#39;)
     * @param {Object} opts Optional parameters
     * @param {String} opts.filename The file name
     * @param {String} opts.contentType The content type
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AmazonS3Activity}
     */
    getSignedS3URL(opts) {
      return this.getSignedS3URLWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
