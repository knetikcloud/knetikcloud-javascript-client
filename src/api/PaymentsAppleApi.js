/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApplyPaymentRequest from '../model/ApplyPaymentRequest';
import Result from '../model/Result';

/**
* PaymentsApple service.
* @module api/PaymentsAppleApi
* @version 3.0.7
*/
export default class PaymentsAppleApi {

    /**
    * Constructs a new PaymentsAppleApi. 
    * @alias module:api/PaymentsAppleApi
    * @class
    * @param {module:ApiClient} apiClient Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Pay invoice with Apple receipt
     * Mark an invoice paid using Apple payment receipt. A receipt will only be accepted once and the details of the transaction must match the invoice, including the product_id matching the sku text of the item in the invoice. Returns the transaction ID if successful.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApplyPaymentRequest} opts.request The request for paying an invoice through an Apple receipt
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link 'String'} and HTTP response
     */
    verifyAppleReceiptWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = opts['request'];


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = 'String';

      return this.apiClient.callApi(
        '/payment/provider/apple/receipt', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Pay invoice with Apple receipt
     * Mark an invoice paid using Apple payment receipt. A receipt will only be accepted once and the details of the transaction must match the invoice, including the product_id matching the sku text of the item in the invoice. Returns the transaction ID if successful.
     * @param {Object} opts Optional parameters
     * @param {module:model/ApplyPaymentRequest} opts.request The request for paying an invoice through an Apple receipt
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link 'String'}
     */
    verifyAppleReceipt(opts) {
      return this.verifyAppleReceiptWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
