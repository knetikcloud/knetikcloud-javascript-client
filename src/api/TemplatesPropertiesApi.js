/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PropertyFieldListResource from '../model/PropertyFieldListResource';
import Result from '../model/Result';

/**
* TemplatesProperties service.
* @module api/TemplatesPropertiesApi
* @version 3.0.7
*/
export default class TemplatesPropertiesApi {

    /**
    * Constructs a new TemplatesPropertiesApi. 
    * @alias module:api/TemplatesPropertiesApi
    * @class
    * @param {module:ApiClient} apiClient Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Get details for a template property type
     * @param {String} type type
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PropertyFieldListResource} and HTTP response
     */
    getTemplatePropertyTypeWithHttpInfo(type) {
      let postBody = null;

      // verify the required parameter 'type' is set
      if (type === undefined || type === null) {
        throw new Error("Missing the required parameter 'type' when calling getTemplatePropertyType");
      }


      let pathParams = {
        'type': type
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PropertyFieldListResource;

      return this.apiClient.callApi(
        '/templates/properties/{type}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Get details for a template property type
     * @param {String} type type
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PropertyFieldListResource}
     */
    getTemplatePropertyType(type) {
      return this.getTemplatePropertyTypeWithHttpInfo(type)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * List template property types
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<module:model/PropertyFieldListResource>} and HTTP response
     */
    getTemplatePropertyTypesWithHttpInfo() {
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [PropertyFieldListResource];

      return this.apiClient.callApi(
        '/templates/properties', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * List template property types
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Array.<module:model/PropertyFieldListResource>}
     */
    getTemplatePropertyTypes() {
      return this.getTemplatePropertyTypesWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
