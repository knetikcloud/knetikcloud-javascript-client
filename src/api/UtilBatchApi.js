/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Batch from '../model/Batch';
import BatchResult from '../model/BatchResult';
import BatchReturn from '../model/BatchReturn';
import Result from '../model/Result';

/**
* UtilBatch service.
* @module api/UtilBatchApi
* @version 3.0.7
*/
export default class UtilBatchApi {

    /**
    * Constructs a new UtilBatchApi. 
    * @alias module:api/UtilBatchApi
    * @class
    * @param {module:ApiClient} apiClient Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Get batch result with token
     * Tokens expire in 24 hours
     * @param {String} token token
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<module:model/BatchReturn>} and HTTP response
     */
    getBatchWithHttpInfo(token) {
      let postBody = null;

      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling getBatch");
      }


      let pathParams = {
        'token': token
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [BatchReturn];

      return this.apiClient.callApi(
        '/batch/{token}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Get batch result with token
     * Tokens expire in 24 hours
     * @param {String} token token
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Array.<module:model/BatchReturn>}
     */
    getBatch(token) {
      return this.getBatchWithHttpInfo(token)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Request to run API call given the method, content type, path url, and body of request
     * Should the request take longer than one of the alloted timeout parameters, a token will be returned instead, which can be used on the token endpoint in this service
     * @param {Object} opts Optional parameters
     * @param {module:model/Batch} opts.batch The batch object
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<module:model/BatchReturn>} and HTTP response
     */
    sendBatchWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = opts['batch'];


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [BatchReturn];

      return this.apiClient.callApi(
        '/batch', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Request to run API call given the method, content type, path url, and body of request
     * Should the request take longer than one of the alloted timeout parameters, a token will be returned instead, which can be used on the token endpoint in this service
     * @param {Object} opts Optional parameters
     * @param {module:model/Batch} opts.batch The batch object
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Array.<module:model/BatchReturn>}
     */
    sendBatch(opts) {
      return this.sendBatchWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
