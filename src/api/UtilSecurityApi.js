/**
 * Knetik Platform API Documentation Latest
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PageLocationLogResource', 'model/TokenDetailsResource'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/PageLocationLogResource'), require('../model/TokenDetailsResource'));
  } else {
    // Browser globals (root is window)
    if (!root.KnetikPlatformApiDocumentationLatest) {
      root.KnetikPlatformApiDocumentationLatest = {};
    }
    root.KnetikPlatformApiDocumentationLatest.UtilSecurityApi = factory(root.KnetikPlatformApiDocumentationLatest.ApiClient, root.KnetikPlatformApiDocumentationLatest.PageLocationLogResource, root.KnetikPlatformApiDocumentationLatest.TokenDetailsResource);
  }
}(this, function(ApiClient, PageLocationLogResource, TokenDetailsResource) {
  'use strict';

  /**
   * UtilSecurity service.
   * @module api/UtilSecurityApi
   * @version Latest
   */

  /**
   * Constructs a new UtilSecurityApi. 
   * @alias module:api/UtilSecurityApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getUserLocationLogUsingGET operation.
     * @callback module:api/UtilSecurityApi~getUserLocationLogUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PageLocationLogResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the authentication log for a user
     * A log entry is recorded everytime a user requests a new token. Standard pagination available
     * @param {Object} opts Optional parameters
     * @param {Number} opts.userId The user id
     * @param {module:api/UtilSecurityApi~getUserLocationLogUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PageLocationLogResource}
     */
    this.getUserLocationLogUsingGET = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'user_id': opts['userId']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['OAuth2'];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = PageLocationLogResource;

      return this.apiClient.callApi(
        '/security/country-log', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the userUsingGET operation.
     * @callback module:api/UtilSecurityApi~userUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TokenDetailsResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the authentication token details. Use /users endpoint for detailed user&#39;s info
     * @param {module:api/UtilSecurityApi~userUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TokenDetailsResource}
     */
    this.userUsingGET = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['OAuth2'];
      var contentTypes = ['application/json'];
      var accepts = ['*/*'];
      var returnType = TokenDetailsResource;

      return this.apiClient.callApi(
        '/me', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
