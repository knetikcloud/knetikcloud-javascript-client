/**
 * Knetik Platform API Documentation Latest
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AchievementDefinitionResource', 'model/AchievementProgressUpdateRequest', 'model/ActionResource', 'model/ActionVariableResource', 'model/ActivityEntitlementResource', 'model/ActivityOccurrenceCreationFailure', 'model/ActivityOccurrenceJoinResult', 'model/ActivityOccurrenceResource', 'model/ActivityOccurrenceResults', 'model/ActivityResource', 'model/ActivityUserResource', 'model/AddressResource', 'model/Affiliate', 'model/AggregateCountResource', 'model/AggregateInvoiceReportResource', 'model/AmazonS3Activity', 'model/AnswerResource', 'model/ApplyPaymentRequest', 'model/ArticleResource', 'model/Artist', 'model/ArtistResource', 'model/AvailableSettingResource', 'model/BareActivityResource', 'model/BareChallengeActivityResource', 'model/Batch', 'model/BatchRequest', 'model/BatchReturn', 'model/Behavior', 'model/BillingReport', 'model/BooleanResource', 'model/BreCategoryResource', 'model/BreEvent', 'model/BreEventLog', 'model/BreGlobalResource', 'model/BreGlobalScopeDefinition', 'model/BreRule', 'model/BreRuleLog', 'model/BreTriggerParameterDefinition', 'model/BreTriggerResource', 'model/BundleItem', 'model/BundledSku', 'model/CampaignResource', 'model/Cart', 'model/CartItemRequest', 'model/CartLineItem', 'model/CartShippableResponse', 'model/CartShippingAddressRequest', 'model/CartShippingOption', 'model/CartSummary', 'model/CatalogSale', 'model/CategoryResource', 'model/ChallengeActivityResource', 'model/ChallengeEventParticipantResource', 'model/ChallengeEventResource', 'model/ChallengeResource', 'model/CityResource', 'model/ClientResource', 'model/CollectionCountry', 'model/CollectionVideoContribution', 'model/Collectionstring', 'model/CommentResource', 'model/CommentSearch', 'model/Config', 'model/ContributionResource', 'model/Country', 'model/CountryResource', 'model/CountryTaxResource', 'model/CouponDefinition', 'model/CouponItem', 'model/CreateBillingAgreementRequest', 'model/CreatePayPalPaymentRequest', 'model/Currency', 'model/CurrencyResource', 'model/CustomerConfig', 'model/CustomerResource', 'model/DatabaseConfig', 'model/DeltaResource', 'model/DeviceResource', 'model/Discount', 'model/DispositionCount', 'model/DispositionResource', 'model/EntitlementItem', 'model/Expressionobject', 'model/FinalizeBillingAgreementRequest', 'model/FinalizePayPalPaymentRequest', 'model/FlagReportResource', 'model/FlagResource', 'model/ForwardLog', 'model/FulfillmentType', 'model/GooglePaymentRequest', 'model/GrantTypeResource', 'model/Group', 'model/GroupMember', 'model/GroupMemberResource', 'model/GroupResource', 'model/ImportJobOutputResource', 'model/ImportJobResource', 'model/InventorySubscriptionResource', 'model/InvoiceCreateRequest', 'model/InvoiceItemResource', 'model/InvoiceLogEntry', 'model/InvoicePaymentStatusRequest', 'model/InvoiceResource', 'model/ItemBehaviorDefinitionResource', 'model/ItemTemplateResource', 'model/KeyValuePairstringstring', 'model/Language', 'model/LeaderboardEntryResource', 'model/LeaderboardResource', 'model/LevelingResource', 'model/Localizer', 'model/LocationLogResource', 'model/LookupTypeResource', 'model/Maintenance', 'model/Mapstringobject', 'model/MetricResource', 'model/MongoDatabaseConfig', 'model/NestedCategory', 'model/NewPasswordRequest', 'model/OauthAccessTokenResource', 'model/Operator', 'model/OptimalPaymentRequest', 'model/PageAchievementDefinitionResource', 'model/PageAggregateCountResource', 'model/PageAggregateInvoiceReportResource', 'model/PageArticleResource', 'model/PageArtistResource', 'model/PageBareActivityResource', 'model/PageBareChallengeActivityResource', 'model/PageBillingReport', 'model/PageBreCategoryResource', 'model/PageBreEventLog', 'model/PageBreGlobalResource', 'model/PageBreRule', 'model/PageBreTriggerResource', 'model/PageCampaignResource', 'model/PageCartSummary', 'model/PageCatalogSale', 'model/PageCategoryResource', 'model/PageChallengeEventParticipantResource', 'model/PageChallengeEventResource', 'model/PageChallengeResource', 'model/PageClientResource', 'model/PageCommentResource', 'model/PageConfig', 'model/PageCountryTaxResource', 'model/PageCurrencyResource', 'model/PageDeviceResource', 'model/PageDispositionResource', 'model/PageEntitlementItem', 'model/PageFlagReportResource', 'model/PageForwardLog', 'model/PageFulfillmentType', 'model/PageGroupMemberResource', 'model/PageGroupResource', 'model/PageImportJobResource', 'model/PageInvoiceLogEntry', 'model/PageInvoiceResource', 'model/PageItemTemplateResource', 'model/PageLevelingResource', 'model/PageLocationLogResource', 'model/PageMapstringobject', 'model/PageOauthAccessTokenResource', 'model/PagePermissionResource', 'model/PagePollResource', 'model/PageQuestionResource', 'model/PageQuestionTemplateResource', 'model/PageRevenueCountryReportResource', 'model/PageRevenueProductReportResource', 'model/PageRewardSetResource', 'model/PageRoleResource', 'model/PageSavedAddressResource', 'model/PageSimpleUserResource', 'model/PageSimpleWallet', 'model/PageStateTaxResource', 'model/PageStoreItem', 'model/PageStoreItemTemplateResource', 'model/PageSubscriptionResource', 'model/PageSubscriptionTemplateResource', 'model/PageTemplateResource', 'model/PageTransactionResource', 'model/PageUsageInfo', 'model/PageUserAchievementGroupResource', 'model/PageUserActionLog', 'model/PageUserBaseResource', 'model/PageUserInventoryResource', 'model/PageUserItemLogResource', 'model/PageUserLevelingResource', 'model/PageUserRelationshipResource', 'model/PageVendorResource', 'model/PageVideoRelationshipResource', 'model/PageVideoResource', 'model/PageWalletTotalResponse', 'model/PageWalletTransactionResource', 'model/Pagestring', 'model/PayBySavedMethodRequest', 'model/PaymentAuthorizationResource', 'model/PaymentMethodResource', 'model/PaymentMethodTypeResource', 'model/Permission', 'model/PermissionResource', 'model/PollAnswerResource', 'model/PollResource', 'model/PollResponseResource', 'model/PredicateOperation', 'model/Property', 'model/PropertyDefinitionResource', 'model/QuestionResource', 'model/QuestionTemplateResource', 'model/RawEmailResource', 'model/RawSMSResource', 'model/ReactivateSubscriptionRequest', 'model/RefundRequest', 'model/RefundResource', 'model/Result', 'model/RevenueCountryReportResource', 'model/RevenueProductReportResource', 'model/RevenueReportResource', 'model/RewardCurrencyResource', 'model/RewardItemResource', 'model/RewardSetResource', 'model/Role', 'model/RoleResource', 'model/SampleCountriesResponse', 'model/SavedAddressResource', 'model/Schedule', 'model/SearchReferenceMapping', 'model/SelectedSettingResource', 'model/SettingOption', 'model/ShippingItem', 'model/SimpleReferenceResourceint', 'model/SimpleReferenceResourcelong', 'model/SimpleReferenceResourcestring', 'model/SimpleUserResource', 'model/SimpleWallet', 'model/Sku', 'model/SkuRequest', 'model/Sort', 'model/SqlDatabaseConfig', 'model/StateResource', 'model/StateTaxResource', 'model/StoreItem', 'model/StoreItemTemplateResource', 'model/StoreListRequest', 'model/StripeCreatePaymentMethod', 'model/StripePaymentRequest', 'model/SubscriptionCreditResource', 'model/SubscriptionPlanResource', 'model/SubscriptionResource', 'model/SubscriptionTemplateResource', 'model/TemplateEmailResource', 'model/TemplateResource', 'model/TemplateSMSResource', 'model/TierResource', 'model/Timezone', 'model/TokenDetailsResource', 'model/TransactionResource', 'model/UsageInfo', 'model/User', 'model/UserAchievementGroupResource', 'model/UserAchievementResource', 'model/UserActionLog', 'model/UserActivityResultsResource', 'model/UserBaseResource', 'model/UserInventoryAddRequest', 'model/UserInventoryResource', 'model/UserItemLogResource', 'model/UserLevelingResource', 'model/UserRelationship', 'model/UserRelationshipReferenceResource', 'model/UserRelationshipResource', 'model/UserResource', 'model/UserTag', 'model/VariableTypeResource', 'model/VendorResource', 'model/Video', 'model/VideoContribution', 'model/VideoRelationshipResource', 'model/VideoResource', 'model/VideoTag', 'model/WalletAlterRequest', 'model/WalletTotalResponse', 'model/WalletTransactionResource', 'model/XsollaPaymentRequest', 'api/AWSS3Api', 'api/ActivitiesApi', 'api/AuthClientsApi', 'api/AuthPermissionsApi', 'api/AuthRolesApi', 'api/AuthTokensApi', 'api/BRERuleEngineActionsApi', 'api/BRERuleEngineCategoriesApi', 'api/BRERuleEngineEventsApi', 'api/BRERuleEngineExpressionsApi', 'api/BRERuleEngineGlobalsApi', 'api/BRERuleEngineRulesApi', 'api/BRERuleEngineTriggersApi', 'api/BRERuleEngineVariablesApi', 'api/CampaignsApi', 'api/CampaignsChallengesApi', 'api/CampaignsRewardsApi', 'api/CategoriesApi', 'api/ConfigsApi', 'api/ContentArticlesApi', 'api/ContentCommentsApi', 'api/ContentPollsApi', 'api/CurrenciesApi', 'api/CustomerserviceApi', 'api/DevicesApi', 'api/DispositionsApi', 'api/FulfillmentApi', 'api/GamificationAchievementsApi', 'api/GamificationLeaderboardsApi', 'api/GamificationLevelingApi', 'api/GamificationMetricsApi', 'api/GamificationTriviaApi', 'api/InvoicesApi', 'api/LocationsApi', 'api/LogsApi', 'api/MediaArtistsApi', 'api/MediaModerationApi', 'api/MediaVideosApi', 'api/MessagingApi', 'api/PaymentsApi', 'api/PaymentsAppleApi', 'api/PaymentsGoogleApi', 'api/PaymentsOptimalApi', 'api/PaymentsPayPalClassicApi', 'api/PaymentsStripeApi', 'api/PaymentsTransactionsApi', 'api/PaymentsWalletsApi', 'api/PaymentsXsollaApi', 'api/ReportingChallengesApi', 'api/ReportingOrdersApi', 'api/ReportingRevenueApi', 'api/ReportingSubscriptionsApi', 'api/ReportingUsageApi', 'api/ReportingUsersApi', 'api/SearchApi', 'api/StoreApi', 'api/StoreBundlesApi', 'api/StoreCouponsApi', 'api/StoreSalesApi', 'api/StoreShippingApi', 'api/StoreShoppingCartsApi', 'api/StoreSubscriptionsApi', 'api/StoreVendorsApi', 'api/TaxesApi', 'api/UsersApi', 'api/UsersAddressesApi', 'api/UsersFriendshipsApi', 'api/UsersGroupsApi', 'api/UsersInventoryApi', 'api/UsersRelationshipsApi', 'api/UsersSubscriptionsApi', 'api/UtilBatchApi', 'api/UtilHealthApi', 'api/UtilMaintenanceApi', 'api/UtilSecurityApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AchievementDefinitionResource'), require('./model/AchievementProgressUpdateRequest'), require('./model/ActionResource'), require('./model/ActionVariableResource'), require('./model/ActivityEntitlementResource'), require('./model/ActivityOccurrenceCreationFailure'), require('./model/ActivityOccurrenceJoinResult'), require('./model/ActivityOccurrenceResource'), require('./model/ActivityOccurrenceResults'), require('./model/ActivityResource'), require('./model/ActivityUserResource'), require('./model/AddressResource'), require('./model/Affiliate'), require('./model/AggregateCountResource'), require('./model/AggregateInvoiceReportResource'), require('./model/AmazonS3Activity'), require('./model/AnswerResource'), require('./model/ApplyPaymentRequest'), require('./model/ArticleResource'), require('./model/Artist'), require('./model/ArtistResource'), require('./model/AvailableSettingResource'), require('./model/BareActivityResource'), require('./model/BareChallengeActivityResource'), require('./model/Batch'), require('./model/BatchRequest'), require('./model/BatchReturn'), require('./model/Behavior'), require('./model/BillingReport'), require('./model/BooleanResource'), require('./model/BreCategoryResource'), require('./model/BreEvent'), require('./model/BreEventLog'), require('./model/BreGlobalResource'), require('./model/BreGlobalScopeDefinition'), require('./model/BreRule'), require('./model/BreRuleLog'), require('./model/BreTriggerParameterDefinition'), require('./model/BreTriggerResource'), require('./model/BundleItem'), require('./model/BundledSku'), require('./model/CampaignResource'), require('./model/Cart'), require('./model/CartItemRequest'), require('./model/CartLineItem'), require('./model/CartShippableResponse'), require('./model/CartShippingAddressRequest'), require('./model/CartShippingOption'), require('./model/CartSummary'), require('./model/CatalogSale'), require('./model/CategoryResource'), require('./model/ChallengeActivityResource'), require('./model/ChallengeEventParticipantResource'), require('./model/ChallengeEventResource'), require('./model/ChallengeResource'), require('./model/CityResource'), require('./model/ClientResource'), require('./model/CollectionCountry'), require('./model/CollectionVideoContribution'), require('./model/Collectionstring'), require('./model/CommentResource'), require('./model/CommentSearch'), require('./model/Config'), require('./model/ContributionResource'), require('./model/Country'), require('./model/CountryResource'), require('./model/CountryTaxResource'), require('./model/CouponDefinition'), require('./model/CouponItem'), require('./model/CreateBillingAgreementRequest'), require('./model/CreatePayPalPaymentRequest'), require('./model/Currency'), require('./model/CurrencyResource'), require('./model/CustomerConfig'), require('./model/CustomerResource'), require('./model/DatabaseConfig'), require('./model/DeltaResource'), require('./model/DeviceResource'), require('./model/Discount'), require('./model/DispositionCount'), require('./model/DispositionResource'), require('./model/EntitlementItem'), require('./model/Expressionobject'), require('./model/FinalizeBillingAgreementRequest'), require('./model/FinalizePayPalPaymentRequest'), require('./model/FlagReportResource'), require('./model/FlagResource'), require('./model/ForwardLog'), require('./model/FulfillmentType'), require('./model/GooglePaymentRequest'), require('./model/GrantTypeResource'), require('./model/Group'), require('./model/GroupMember'), require('./model/GroupMemberResource'), require('./model/GroupResource'), require('./model/ImportJobOutputResource'), require('./model/ImportJobResource'), require('./model/InventorySubscriptionResource'), require('./model/InvoiceCreateRequest'), require('./model/InvoiceItemResource'), require('./model/InvoiceLogEntry'), require('./model/InvoicePaymentStatusRequest'), require('./model/InvoiceResource'), require('./model/ItemBehaviorDefinitionResource'), require('./model/ItemTemplateResource'), require('./model/KeyValuePairstringstring'), require('./model/Language'), require('./model/LeaderboardEntryResource'), require('./model/LeaderboardResource'), require('./model/LevelingResource'), require('./model/Localizer'), require('./model/LocationLogResource'), require('./model/LookupTypeResource'), require('./model/Maintenance'), require('./model/Mapstringobject'), require('./model/MetricResource'), require('./model/MongoDatabaseConfig'), require('./model/NestedCategory'), require('./model/NewPasswordRequest'), require('./model/OauthAccessTokenResource'), require('./model/Operator'), require('./model/OptimalPaymentRequest'), require('./model/PageAchievementDefinitionResource'), require('./model/PageAggregateCountResource'), require('./model/PageAggregateInvoiceReportResource'), require('./model/PageArticleResource'), require('./model/PageArtistResource'), require('./model/PageBareActivityResource'), require('./model/PageBareChallengeActivityResource'), require('./model/PageBillingReport'), require('./model/PageBreCategoryResource'), require('./model/PageBreEventLog'), require('./model/PageBreGlobalResource'), require('./model/PageBreRule'), require('./model/PageBreTriggerResource'), require('./model/PageCampaignResource'), require('./model/PageCartSummary'), require('./model/PageCatalogSale'), require('./model/PageCategoryResource'), require('./model/PageChallengeEventParticipantResource'), require('./model/PageChallengeEventResource'), require('./model/PageChallengeResource'), require('./model/PageClientResource'), require('./model/PageCommentResource'), require('./model/PageConfig'), require('./model/PageCountryTaxResource'), require('./model/PageCurrencyResource'), require('./model/PageDeviceResource'), require('./model/PageDispositionResource'), require('./model/PageEntitlementItem'), require('./model/PageFlagReportResource'), require('./model/PageForwardLog'), require('./model/PageFulfillmentType'), require('./model/PageGroupMemberResource'), require('./model/PageGroupResource'), require('./model/PageImportJobResource'), require('./model/PageInvoiceLogEntry'), require('./model/PageInvoiceResource'), require('./model/PageItemTemplateResource'), require('./model/PageLevelingResource'), require('./model/PageLocationLogResource'), require('./model/PageMapstringobject'), require('./model/PageOauthAccessTokenResource'), require('./model/PagePermissionResource'), require('./model/PagePollResource'), require('./model/PageQuestionResource'), require('./model/PageQuestionTemplateResource'), require('./model/PageRevenueCountryReportResource'), require('./model/PageRevenueProductReportResource'), require('./model/PageRewardSetResource'), require('./model/PageRoleResource'), require('./model/PageSavedAddressResource'), require('./model/PageSimpleUserResource'), require('./model/PageSimpleWallet'), require('./model/PageStateTaxResource'), require('./model/PageStoreItem'), require('./model/PageStoreItemTemplateResource'), require('./model/PageSubscriptionResource'), require('./model/PageSubscriptionTemplateResource'), require('./model/PageTemplateResource'), require('./model/PageTransactionResource'), require('./model/PageUsageInfo'), require('./model/PageUserAchievementGroupResource'), require('./model/PageUserActionLog'), require('./model/PageUserBaseResource'), require('./model/PageUserInventoryResource'), require('./model/PageUserItemLogResource'), require('./model/PageUserLevelingResource'), require('./model/PageUserRelationshipResource'), require('./model/PageVendorResource'), require('./model/PageVideoRelationshipResource'), require('./model/PageVideoResource'), require('./model/PageWalletTotalResponse'), require('./model/PageWalletTransactionResource'), require('./model/Pagestring'), require('./model/PayBySavedMethodRequest'), require('./model/PaymentAuthorizationResource'), require('./model/PaymentMethodResource'), require('./model/PaymentMethodTypeResource'), require('./model/Permission'), require('./model/PermissionResource'), require('./model/PollAnswerResource'), require('./model/PollResource'), require('./model/PollResponseResource'), require('./model/PredicateOperation'), require('./model/Property'), require('./model/PropertyDefinitionResource'), require('./model/QuestionResource'), require('./model/QuestionTemplateResource'), require('./model/RawEmailResource'), require('./model/RawSMSResource'), require('./model/ReactivateSubscriptionRequest'), require('./model/RefundRequest'), require('./model/RefundResource'), require('./model/Result'), require('./model/RevenueCountryReportResource'), require('./model/RevenueProductReportResource'), require('./model/RevenueReportResource'), require('./model/RewardCurrencyResource'), require('./model/RewardItemResource'), require('./model/RewardSetResource'), require('./model/Role'), require('./model/RoleResource'), require('./model/SampleCountriesResponse'), require('./model/SavedAddressResource'), require('./model/Schedule'), require('./model/SearchReferenceMapping'), require('./model/SelectedSettingResource'), require('./model/SettingOption'), require('./model/ShippingItem'), require('./model/SimpleReferenceResourceint'), require('./model/SimpleReferenceResourcelong'), require('./model/SimpleReferenceResourcestring'), require('./model/SimpleUserResource'), require('./model/SimpleWallet'), require('./model/Sku'), require('./model/SkuRequest'), require('./model/Sort'), require('./model/SqlDatabaseConfig'), require('./model/StateResource'), require('./model/StateTaxResource'), require('./model/StoreItem'), require('./model/StoreItemTemplateResource'), require('./model/StoreListRequest'), require('./model/StripeCreatePaymentMethod'), require('./model/StripePaymentRequest'), require('./model/SubscriptionCreditResource'), require('./model/SubscriptionPlanResource'), require('./model/SubscriptionResource'), require('./model/SubscriptionTemplateResource'), require('./model/TemplateEmailResource'), require('./model/TemplateResource'), require('./model/TemplateSMSResource'), require('./model/TierResource'), require('./model/Timezone'), require('./model/TokenDetailsResource'), require('./model/TransactionResource'), require('./model/UsageInfo'), require('./model/User'), require('./model/UserAchievementGroupResource'), require('./model/UserAchievementResource'), require('./model/UserActionLog'), require('./model/UserActivityResultsResource'), require('./model/UserBaseResource'), require('./model/UserInventoryAddRequest'), require('./model/UserInventoryResource'), require('./model/UserItemLogResource'), require('./model/UserLevelingResource'), require('./model/UserRelationship'), require('./model/UserRelationshipReferenceResource'), require('./model/UserRelationshipResource'), require('./model/UserResource'), require('./model/UserTag'), require('./model/VariableTypeResource'), require('./model/VendorResource'), require('./model/Video'), require('./model/VideoContribution'), require('./model/VideoRelationshipResource'), require('./model/VideoResource'), require('./model/VideoTag'), require('./model/WalletAlterRequest'), require('./model/WalletTotalResponse'), require('./model/WalletTransactionResource'), require('./model/XsollaPaymentRequest'), require('./api/AWSS3Api'), require('./api/ActivitiesApi'), require('./api/AuthClientsApi'), require('./api/AuthPermissionsApi'), require('./api/AuthRolesApi'), require('./api/AuthTokensApi'), require('./api/BRERuleEngineActionsApi'), require('./api/BRERuleEngineCategoriesApi'), require('./api/BRERuleEngineEventsApi'), require('./api/BRERuleEngineExpressionsApi'), require('./api/BRERuleEngineGlobalsApi'), require('./api/BRERuleEngineRulesApi'), require('./api/BRERuleEngineTriggersApi'), require('./api/BRERuleEngineVariablesApi'), require('./api/CampaignsApi'), require('./api/CampaignsChallengesApi'), require('./api/CampaignsRewardsApi'), require('./api/CategoriesApi'), require('./api/ConfigsApi'), require('./api/ContentArticlesApi'), require('./api/ContentCommentsApi'), require('./api/ContentPollsApi'), require('./api/CurrenciesApi'), require('./api/CustomerserviceApi'), require('./api/DevicesApi'), require('./api/DispositionsApi'), require('./api/FulfillmentApi'), require('./api/GamificationAchievementsApi'), require('./api/GamificationLeaderboardsApi'), require('./api/GamificationLevelingApi'), require('./api/GamificationMetricsApi'), require('./api/GamificationTriviaApi'), require('./api/InvoicesApi'), require('./api/LocationsApi'), require('./api/LogsApi'), require('./api/MediaArtistsApi'), require('./api/MediaModerationApi'), require('./api/MediaVideosApi'), require('./api/MessagingApi'), require('./api/PaymentsApi'), require('./api/PaymentsAppleApi'), require('./api/PaymentsGoogleApi'), require('./api/PaymentsOptimalApi'), require('./api/PaymentsPayPalClassicApi'), require('./api/PaymentsStripeApi'), require('./api/PaymentsTransactionsApi'), require('./api/PaymentsWalletsApi'), require('./api/PaymentsXsollaApi'), require('./api/ReportingChallengesApi'), require('./api/ReportingOrdersApi'), require('./api/ReportingRevenueApi'), require('./api/ReportingSubscriptionsApi'), require('./api/ReportingUsageApi'), require('./api/ReportingUsersApi'), require('./api/SearchApi'), require('./api/StoreApi'), require('./api/StoreBundlesApi'), require('./api/StoreCouponsApi'), require('./api/StoreSalesApi'), require('./api/StoreShippingApi'), require('./api/StoreShoppingCartsApi'), require('./api/StoreSubscriptionsApi'), require('./api/StoreVendorsApi'), require('./api/TaxesApi'), require('./api/UsersApi'), require('./api/UsersAddressesApi'), require('./api/UsersFriendshipsApi'), require('./api/UsersGroupsApi'), require('./api/UsersInventoryApi'), require('./api/UsersRelationshipsApi'), require('./api/UsersSubscriptionsApi'), require('./api/UtilBatchApi'), require('./api/UtilHealthApi'), require('./api/UtilMaintenanceApi'), require('./api/UtilSecurityApi'));
  }
}(function(ApiClient, AchievementDefinitionResource, AchievementProgressUpdateRequest, ActionResource, ActionVariableResource, ActivityEntitlementResource, ActivityOccurrenceCreationFailure, ActivityOccurrenceJoinResult, ActivityOccurrenceResource, ActivityOccurrenceResults, ActivityResource, ActivityUserResource, AddressResource, Affiliate, AggregateCountResource, AggregateInvoiceReportResource, AmazonS3Activity, AnswerResource, ApplyPaymentRequest, ArticleResource, Artist, ArtistResource, AvailableSettingResource, BareActivityResource, BareChallengeActivityResource, Batch, BatchRequest, BatchReturn, Behavior, BillingReport, BooleanResource, BreCategoryResource, BreEvent, BreEventLog, BreGlobalResource, BreGlobalScopeDefinition, BreRule, BreRuleLog, BreTriggerParameterDefinition, BreTriggerResource, BundleItem, BundledSku, CampaignResource, Cart, CartItemRequest, CartLineItem, CartShippableResponse, CartShippingAddressRequest, CartShippingOption, CartSummary, CatalogSale, CategoryResource, ChallengeActivityResource, ChallengeEventParticipantResource, ChallengeEventResource, ChallengeResource, CityResource, ClientResource, CollectionCountry, CollectionVideoContribution, Collectionstring, CommentResource, CommentSearch, Config, ContributionResource, Country, CountryResource, CountryTaxResource, CouponDefinition, CouponItem, CreateBillingAgreementRequest, CreatePayPalPaymentRequest, Currency, CurrencyResource, CustomerConfig, CustomerResource, DatabaseConfig, DeltaResource, DeviceResource, Discount, DispositionCount, DispositionResource, EntitlementItem, Expressionobject, FinalizeBillingAgreementRequest, FinalizePayPalPaymentRequest, FlagReportResource, FlagResource, ForwardLog, FulfillmentType, GooglePaymentRequest, GrantTypeResource, Group, GroupMember, GroupMemberResource, GroupResource, ImportJobOutputResource, ImportJobResource, InventorySubscriptionResource, InvoiceCreateRequest, InvoiceItemResource, InvoiceLogEntry, InvoicePaymentStatusRequest, InvoiceResource, ItemBehaviorDefinitionResource, ItemTemplateResource, KeyValuePairstringstring, Language, LeaderboardEntryResource, LeaderboardResource, LevelingResource, Localizer, LocationLogResource, LookupTypeResource, Maintenance, Mapstringobject, MetricResource, MongoDatabaseConfig, NestedCategory, NewPasswordRequest, OauthAccessTokenResource, Operator, OptimalPaymentRequest, PageAchievementDefinitionResource, PageAggregateCountResource, PageAggregateInvoiceReportResource, PageArticleResource, PageArtistResource, PageBareActivityResource, PageBareChallengeActivityResource, PageBillingReport, PageBreCategoryResource, PageBreEventLog, PageBreGlobalResource, PageBreRule, PageBreTriggerResource, PageCampaignResource, PageCartSummary, PageCatalogSale, PageCategoryResource, PageChallengeEventParticipantResource, PageChallengeEventResource, PageChallengeResource, PageClientResource, PageCommentResource, PageConfig, PageCountryTaxResource, PageCurrencyResource, PageDeviceResource, PageDispositionResource, PageEntitlementItem, PageFlagReportResource, PageForwardLog, PageFulfillmentType, PageGroupMemberResource, PageGroupResource, PageImportJobResource, PageInvoiceLogEntry, PageInvoiceResource, PageItemTemplateResource, PageLevelingResource, PageLocationLogResource, PageMapstringobject, PageOauthAccessTokenResource, PagePermissionResource, PagePollResource, PageQuestionResource, PageQuestionTemplateResource, PageRevenueCountryReportResource, PageRevenueProductReportResource, PageRewardSetResource, PageRoleResource, PageSavedAddressResource, PageSimpleUserResource, PageSimpleWallet, PageStateTaxResource, PageStoreItem, PageStoreItemTemplateResource, PageSubscriptionResource, PageSubscriptionTemplateResource, PageTemplateResource, PageTransactionResource, PageUsageInfo, PageUserAchievementGroupResource, PageUserActionLog, PageUserBaseResource, PageUserInventoryResource, PageUserItemLogResource, PageUserLevelingResource, PageUserRelationshipResource, PageVendorResource, PageVideoRelationshipResource, PageVideoResource, PageWalletTotalResponse, PageWalletTransactionResource, Pagestring, PayBySavedMethodRequest, PaymentAuthorizationResource, PaymentMethodResource, PaymentMethodTypeResource, Permission, PermissionResource, PollAnswerResource, PollResource, PollResponseResource, PredicateOperation, Property, PropertyDefinitionResource, QuestionResource, QuestionTemplateResource, RawEmailResource, RawSMSResource, ReactivateSubscriptionRequest, RefundRequest, RefundResource, Result, RevenueCountryReportResource, RevenueProductReportResource, RevenueReportResource, RewardCurrencyResource, RewardItemResource, RewardSetResource, Role, RoleResource, SampleCountriesResponse, SavedAddressResource, Schedule, SearchReferenceMapping, SelectedSettingResource, SettingOption, ShippingItem, SimpleReferenceResourceint, SimpleReferenceResourcelong, SimpleReferenceResourcestring, SimpleUserResource, SimpleWallet, Sku, SkuRequest, Sort, SqlDatabaseConfig, StateResource, StateTaxResource, StoreItem, StoreItemTemplateResource, StoreListRequest, StripeCreatePaymentMethod, StripePaymentRequest, SubscriptionCreditResource, SubscriptionPlanResource, SubscriptionResource, SubscriptionTemplateResource, TemplateEmailResource, TemplateResource, TemplateSMSResource, TierResource, Timezone, TokenDetailsResource, TransactionResource, UsageInfo, User, UserAchievementGroupResource, UserAchievementResource, UserActionLog, UserActivityResultsResource, UserBaseResource, UserInventoryAddRequest, UserInventoryResource, UserItemLogResource, UserLevelingResource, UserRelationship, UserRelationshipReferenceResource, UserRelationshipResource, UserResource, UserTag, VariableTypeResource, VendorResource, Video, VideoContribution, VideoRelationshipResource, VideoResource, VideoTag, WalletAlterRequest, WalletTotalResponse, WalletTransactionResource, XsollaPaymentRequest, AWSS3Api, ActivitiesApi, AuthClientsApi, AuthPermissionsApi, AuthRolesApi, AuthTokensApi, BRERuleEngineActionsApi, BRERuleEngineCategoriesApi, BRERuleEngineEventsApi, BRERuleEngineExpressionsApi, BRERuleEngineGlobalsApi, BRERuleEngineRulesApi, BRERuleEngineTriggersApi, BRERuleEngineVariablesApi, CampaignsApi, CampaignsChallengesApi, CampaignsRewardsApi, CategoriesApi, ConfigsApi, ContentArticlesApi, ContentCommentsApi, ContentPollsApi, CurrenciesApi, CustomerserviceApi, DevicesApi, DispositionsApi, FulfillmentApi, GamificationAchievementsApi, GamificationLeaderboardsApi, GamificationLevelingApi, GamificationMetricsApi, GamificationTriviaApi, InvoicesApi, LocationsApi, LogsApi, MediaArtistsApi, MediaModerationApi, MediaVideosApi, MessagingApi, PaymentsApi, PaymentsAppleApi, PaymentsGoogleApi, PaymentsOptimalApi, PaymentsPayPalClassicApi, PaymentsStripeApi, PaymentsTransactionsApi, PaymentsWalletsApi, PaymentsXsollaApi, ReportingChallengesApi, ReportingOrdersApi, ReportingRevenueApi, ReportingSubscriptionsApi, ReportingUsageApi, ReportingUsersApi, SearchApi, StoreApi, StoreBundlesApi, StoreCouponsApi, StoreSalesApi, StoreShippingApi, StoreShoppingCartsApi, StoreSubscriptionsApi, StoreVendorsApi, TaxesApi, UsersApi, UsersAddressesApi, UsersFriendshipsApi, UsersGroupsApi, UsersInventoryApi, UsersRelationshipsApi, UsersSubscriptionsApi, UtilBatchApi, UtilHealthApi, UtilMaintenanceApi, UtilSecurityApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var KnetikPlatformApiDocumentationLatest = require('index'); // See note below*.
   * var xxxSvc = new KnetikPlatformApiDocumentationLatest.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new KnetikPlatformApiDocumentationLatest.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new KnetikPlatformApiDocumentationLatest.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new KnetikPlatformApiDocumentationLatest.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version Latest
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AchievementDefinitionResource model constructor.
     * @property {module:model/AchievementDefinitionResource}
     */
    AchievementDefinitionResource: AchievementDefinitionResource,
    /**
     * The AchievementProgressUpdateRequest model constructor.
     * @property {module:model/AchievementProgressUpdateRequest}
     */
    AchievementProgressUpdateRequest: AchievementProgressUpdateRequest,
    /**
     * The ActionResource model constructor.
     * @property {module:model/ActionResource}
     */
    ActionResource: ActionResource,
    /**
     * The ActionVariableResource model constructor.
     * @property {module:model/ActionVariableResource}
     */
    ActionVariableResource: ActionVariableResource,
    /**
     * The ActivityEntitlementResource model constructor.
     * @property {module:model/ActivityEntitlementResource}
     */
    ActivityEntitlementResource: ActivityEntitlementResource,
    /**
     * The ActivityOccurrenceCreationFailure model constructor.
     * @property {module:model/ActivityOccurrenceCreationFailure}
     */
    ActivityOccurrenceCreationFailure: ActivityOccurrenceCreationFailure,
    /**
     * The ActivityOccurrenceJoinResult model constructor.
     * @property {module:model/ActivityOccurrenceJoinResult}
     */
    ActivityOccurrenceJoinResult: ActivityOccurrenceJoinResult,
    /**
     * The ActivityOccurrenceResource model constructor.
     * @property {module:model/ActivityOccurrenceResource}
     */
    ActivityOccurrenceResource: ActivityOccurrenceResource,
    /**
     * The ActivityOccurrenceResults model constructor.
     * @property {module:model/ActivityOccurrenceResults}
     */
    ActivityOccurrenceResults: ActivityOccurrenceResults,
    /**
     * The ActivityResource model constructor.
     * @property {module:model/ActivityResource}
     */
    ActivityResource: ActivityResource,
    /**
     * The ActivityUserResource model constructor.
     * @property {module:model/ActivityUserResource}
     */
    ActivityUserResource: ActivityUserResource,
    /**
     * The AddressResource model constructor.
     * @property {module:model/AddressResource}
     */
    AddressResource: AddressResource,
    /**
     * The Affiliate model constructor.
     * @property {module:model/Affiliate}
     */
    Affiliate: Affiliate,
    /**
     * The AggregateCountResource model constructor.
     * @property {module:model/AggregateCountResource}
     */
    AggregateCountResource: AggregateCountResource,
    /**
     * The AggregateInvoiceReportResource model constructor.
     * @property {module:model/AggregateInvoiceReportResource}
     */
    AggregateInvoiceReportResource: AggregateInvoiceReportResource,
    /**
     * The AmazonS3Activity model constructor.
     * @property {module:model/AmazonS3Activity}
     */
    AmazonS3Activity: AmazonS3Activity,
    /**
     * The AnswerResource model constructor.
     * @property {module:model/AnswerResource}
     */
    AnswerResource: AnswerResource,
    /**
     * The ApplyPaymentRequest model constructor.
     * @property {module:model/ApplyPaymentRequest}
     */
    ApplyPaymentRequest: ApplyPaymentRequest,
    /**
     * The ArticleResource model constructor.
     * @property {module:model/ArticleResource}
     */
    ArticleResource: ArticleResource,
    /**
     * The Artist model constructor.
     * @property {module:model/Artist}
     */
    Artist: Artist,
    /**
     * The ArtistResource model constructor.
     * @property {module:model/ArtistResource}
     */
    ArtistResource: ArtistResource,
    /**
     * The AvailableSettingResource model constructor.
     * @property {module:model/AvailableSettingResource}
     */
    AvailableSettingResource: AvailableSettingResource,
    /**
     * The BareActivityResource model constructor.
     * @property {module:model/BareActivityResource}
     */
    BareActivityResource: BareActivityResource,
    /**
     * The BareChallengeActivityResource model constructor.
     * @property {module:model/BareChallengeActivityResource}
     */
    BareChallengeActivityResource: BareChallengeActivityResource,
    /**
     * The Batch model constructor.
     * @property {module:model/Batch}
     */
    Batch: Batch,
    /**
     * The BatchRequest model constructor.
     * @property {module:model/BatchRequest}
     */
    BatchRequest: BatchRequest,
    /**
     * The BatchReturn model constructor.
     * @property {module:model/BatchReturn}
     */
    BatchReturn: BatchReturn,
    /**
     * The Behavior model constructor.
     * @property {module:model/Behavior}
     */
    Behavior: Behavior,
    /**
     * The BillingReport model constructor.
     * @property {module:model/BillingReport}
     */
    BillingReport: BillingReport,
    /**
     * The BooleanResource model constructor.
     * @property {module:model/BooleanResource}
     */
    BooleanResource: BooleanResource,
    /**
     * The BreCategoryResource model constructor.
     * @property {module:model/BreCategoryResource}
     */
    BreCategoryResource: BreCategoryResource,
    /**
     * The BreEvent model constructor.
     * @property {module:model/BreEvent}
     */
    BreEvent: BreEvent,
    /**
     * The BreEventLog model constructor.
     * @property {module:model/BreEventLog}
     */
    BreEventLog: BreEventLog,
    /**
     * The BreGlobalResource model constructor.
     * @property {module:model/BreGlobalResource}
     */
    BreGlobalResource: BreGlobalResource,
    /**
     * The BreGlobalScopeDefinition model constructor.
     * @property {module:model/BreGlobalScopeDefinition}
     */
    BreGlobalScopeDefinition: BreGlobalScopeDefinition,
    /**
     * The BreRule model constructor.
     * @property {module:model/BreRule}
     */
    BreRule: BreRule,
    /**
     * The BreRuleLog model constructor.
     * @property {module:model/BreRuleLog}
     */
    BreRuleLog: BreRuleLog,
    /**
     * The BreTriggerParameterDefinition model constructor.
     * @property {module:model/BreTriggerParameterDefinition}
     */
    BreTriggerParameterDefinition: BreTriggerParameterDefinition,
    /**
     * The BreTriggerResource model constructor.
     * @property {module:model/BreTriggerResource}
     */
    BreTriggerResource: BreTriggerResource,
    /**
     * The BundleItem model constructor.
     * @property {module:model/BundleItem}
     */
    BundleItem: BundleItem,
    /**
     * The BundledSku model constructor.
     * @property {module:model/BundledSku}
     */
    BundledSku: BundledSku,
    /**
     * The CampaignResource model constructor.
     * @property {module:model/CampaignResource}
     */
    CampaignResource: CampaignResource,
    /**
     * The Cart model constructor.
     * @property {module:model/Cart}
     */
    Cart: Cart,
    /**
     * The CartItemRequest model constructor.
     * @property {module:model/CartItemRequest}
     */
    CartItemRequest: CartItemRequest,
    /**
     * The CartLineItem model constructor.
     * @property {module:model/CartLineItem}
     */
    CartLineItem: CartLineItem,
    /**
     * The CartShippableResponse model constructor.
     * @property {module:model/CartShippableResponse}
     */
    CartShippableResponse: CartShippableResponse,
    /**
     * The CartShippingAddressRequest model constructor.
     * @property {module:model/CartShippingAddressRequest}
     */
    CartShippingAddressRequest: CartShippingAddressRequest,
    /**
     * The CartShippingOption model constructor.
     * @property {module:model/CartShippingOption}
     */
    CartShippingOption: CartShippingOption,
    /**
     * The CartSummary model constructor.
     * @property {module:model/CartSummary}
     */
    CartSummary: CartSummary,
    /**
     * The CatalogSale model constructor.
     * @property {module:model/CatalogSale}
     */
    CatalogSale: CatalogSale,
    /**
     * The CategoryResource model constructor.
     * @property {module:model/CategoryResource}
     */
    CategoryResource: CategoryResource,
    /**
     * The ChallengeActivityResource model constructor.
     * @property {module:model/ChallengeActivityResource}
     */
    ChallengeActivityResource: ChallengeActivityResource,
    /**
     * The ChallengeEventParticipantResource model constructor.
     * @property {module:model/ChallengeEventParticipantResource}
     */
    ChallengeEventParticipantResource: ChallengeEventParticipantResource,
    /**
     * The ChallengeEventResource model constructor.
     * @property {module:model/ChallengeEventResource}
     */
    ChallengeEventResource: ChallengeEventResource,
    /**
     * The ChallengeResource model constructor.
     * @property {module:model/ChallengeResource}
     */
    ChallengeResource: ChallengeResource,
    /**
     * The CityResource model constructor.
     * @property {module:model/CityResource}
     */
    CityResource: CityResource,
    /**
     * The ClientResource model constructor.
     * @property {module:model/ClientResource}
     */
    ClientResource: ClientResource,
    /**
     * The CollectionCountry model constructor.
     * @property {module:model/CollectionCountry}
     */
    CollectionCountry: CollectionCountry,
    /**
     * The CollectionVideoContribution model constructor.
     * @property {module:model/CollectionVideoContribution}
     */
    CollectionVideoContribution: CollectionVideoContribution,
    /**
     * The Collectionstring model constructor.
     * @property {module:model/Collectionstring}
     */
    Collectionstring: Collectionstring,
    /**
     * The CommentResource model constructor.
     * @property {module:model/CommentResource}
     */
    CommentResource: CommentResource,
    /**
     * The CommentSearch model constructor.
     * @property {module:model/CommentSearch}
     */
    CommentSearch: CommentSearch,
    /**
     * The Config model constructor.
     * @property {module:model/Config}
     */
    Config: Config,
    /**
     * The ContributionResource model constructor.
     * @property {module:model/ContributionResource}
     */
    ContributionResource: ContributionResource,
    /**
     * The Country model constructor.
     * @property {module:model/Country}
     */
    Country: Country,
    /**
     * The CountryResource model constructor.
     * @property {module:model/CountryResource}
     */
    CountryResource: CountryResource,
    /**
     * The CountryTaxResource model constructor.
     * @property {module:model/CountryTaxResource}
     */
    CountryTaxResource: CountryTaxResource,
    /**
     * The CouponDefinition model constructor.
     * @property {module:model/CouponDefinition}
     */
    CouponDefinition: CouponDefinition,
    /**
     * The CouponItem model constructor.
     * @property {module:model/CouponItem}
     */
    CouponItem: CouponItem,
    /**
     * The CreateBillingAgreementRequest model constructor.
     * @property {module:model/CreateBillingAgreementRequest}
     */
    CreateBillingAgreementRequest: CreateBillingAgreementRequest,
    /**
     * The CreatePayPalPaymentRequest model constructor.
     * @property {module:model/CreatePayPalPaymentRequest}
     */
    CreatePayPalPaymentRequest: CreatePayPalPaymentRequest,
    /**
     * The Currency model constructor.
     * @property {module:model/Currency}
     */
    Currency: Currency,
    /**
     * The CurrencyResource model constructor.
     * @property {module:model/CurrencyResource}
     */
    CurrencyResource: CurrencyResource,
    /**
     * The CustomerConfig model constructor.
     * @property {module:model/CustomerConfig}
     */
    CustomerConfig: CustomerConfig,
    /**
     * The CustomerResource model constructor.
     * @property {module:model/CustomerResource}
     */
    CustomerResource: CustomerResource,
    /**
     * The DatabaseConfig model constructor.
     * @property {module:model/DatabaseConfig}
     */
    DatabaseConfig: DatabaseConfig,
    /**
     * The DeltaResource model constructor.
     * @property {module:model/DeltaResource}
     */
    DeltaResource: DeltaResource,
    /**
     * The DeviceResource model constructor.
     * @property {module:model/DeviceResource}
     */
    DeviceResource: DeviceResource,
    /**
     * The Discount model constructor.
     * @property {module:model/Discount}
     */
    Discount: Discount,
    /**
     * The DispositionCount model constructor.
     * @property {module:model/DispositionCount}
     */
    DispositionCount: DispositionCount,
    /**
     * The DispositionResource model constructor.
     * @property {module:model/DispositionResource}
     */
    DispositionResource: DispositionResource,
    /**
     * The EntitlementItem model constructor.
     * @property {module:model/EntitlementItem}
     */
    EntitlementItem: EntitlementItem,
    /**
     * The Expressionobject model constructor.
     * @property {module:model/Expressionobject}
     */
    Expressionobject: Expressionobject,
    /**
     * The FinalizeBillingAgreementRequest model constructor.
     * @property {module:model/FinalizeBillingAgreementRequest}
     */
    FinalizeBillingAgreementRequest: FinalizeBillingAgreementRequest,
    /**
     * The FinalizePayPalPaymentRequest model constructor.
     * @property {module:model/FinalizePayPalPaymentRequest}
     */
    FinalizePayPalPaymentRequest: FinalizePayPalPaymentRequest,
    /**
     * The FlagReportResource model constructor.
     * @property {module:model/FlagReportResource}
     */
    FlagReportResource: FlagReportResource,
    /**
     * The FlagResource model constructor.
     * @property {module:model/FlagResource}
     */
    FlagResource: FlagResource,
    /**
     * The ForwardLog model constructor.
     * @property {module:model/ForwardLog}
     */
    ForwardLog: ForwardLog,
    /**
     * The FulfillmentType model constructor.
     * @property {module:model/FulfillmentType}
     */
    FulfillmentType: FulfillmentType,
    /**
     * The GooglePaymentRequest model constructor.
     * @property {module:model/GooglePaymentRequest}
     */
    GooglePaymentRequest: GooglePaymentRequest,
    /**
     * The GrantTypeResource model constructor.
     * @property {module:model/GrantTypeResource}
     */
    GrantTypeResource: GrantTypeResource,
    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group: Group,
    /**
     * The GroupMember model constructor.
     * @property {module:model/GroupMember}
     */
    GroupMember: GroupMember,
    /**
     * The GroupMemberResource model constructor.
     * @property {module:model/GroupMemberResource}
     */
    GroupMemberResource: GroupMemberResource,
    /**
     * The GroupResource model constructor.
     * @property {module:model/GroupResource}
     */
    GroupResource: GroupResource,
    /**
     * The ImportJobOutputResource model constructor.
     * @property {module:model/ImportJobOutputResource}
     */
    ImportJobOutputResource: ImportJobOutputResource,
    /**
     * The ImportJobResource model constructor.
     * @property {module:model/ImportJobResource}
     */
    ImportJobResource: ImportJobResource,
    /**
     * The InventorySubscriptionResource model constructor.
     * @property {module:model/InventorySubscriptionResource}
     */
    InventorySubscriptionResource: InventorySubscriptionResource,
    /**
     * The InvoiceCreateRequest model constructor.
     * @property {module:model/InvoiceCreateRequest}
     */
    InvoiceCreateRequest: InvoiceCreateRequest,
    /**
     * The InvoiceItemResource model constructor.
     * @property {module:model/InvoiceItemResource}
     */
    InvoiceItemResource: InvoiceItemResource,
    /**
     * The InvoiceLogEntry model constructor.
     * @property {module:model/InvoiceLogEntry}
     */
    InvoiceLogEntry: InvoiceLogEntry,
    /**
     * The InvoicePaymentStatusRequest model constructor.
     * @property {module:model/InvoicePaymentStatusRequest}
     */
    InvoicePaymentStatusRequest: InvoicePaymentStatusRequest,
    /**
     * The InvoiceResource model constructor.
     * @property {module:model/InvoiceResource}
     */
    InvoiceResource: InvoiceResource,
    /**
     * The ItemBehaviorDefinitionResource model constructor.
     * @property {module:model/ItemBehaviorDefinitionResource}
     */
    ItemBehaviorDefinitionResource: ItemBehaviorDefinitionResource,
    /**
     * The ItemTemplateResource model constructor.
     * @property {module:model/ItemTemplateResource}
     */
    ItemTemplateResource: ItemTemplateResource,
    /**
     * The KeyValuePairstringstring model constructor.
     * @property {module:model/KeyValuePairstringstring}
     */
    KeyValuePairstringstring: KeyValuePairstringstring,
    /**
     * The Language model constructor.
     * @property {module:model/Language}
     */
    Language: Language,
    /**
     * The LeaderboardEntryResource model constructor.
     * @property {module:model/LeaderboardEntryResource}
     */
    LeaderboardEntryResource: LeaderboardEntryResource,
    /**
     * The LeaderboardResource model constructor.
     * @property {module:model/LeaderboardResource}
     */
    LeaderboardResource: LeaderboardResource,
    /**
     * The LevelingResource model constructor.
     * @property {module:model/LevelingResource}
     */
    LevelingResource: LevelingResource,
    /**
     * The Localizer model constructor.
     * @property {module:model/Localizer}
     */
    Localizer: Localizer,
    /**
     * The LocationLogResource model constructor.
     * @property {module:model/LocationLogResource}
     */
    LocationLogResource: LocationLogResource,
    /**
     * The LookupTypeResource model constructor.
     * @property {module:model/LookupTypeResource}
     */
    LookupTypeResource: LookupTypeResource,
    /**
     * The Maintenance model constructor.
     * @property {module:model/Maintenance}
     */
    Maintenance: Maintenance,
    /**
     * The Mapstringobject model constructor.
     * @property {module:model/Mapstringobject}
     */
    Mapstringobject: Mapstringobject,
    /**
     * The MetricResource model constructor.
     * @property {module:model/MetricResource}
     */
    MetricResource: MetricResource,
    /**
     * The MongoDatabaseConfig model constructor.
     * @property {module:model/MongoDatabaseConfig}
     */
    MongoDatabaseConfig: MongoDatabaseConfig,
    /**
     * The NestedCategory model constructor.
     * @property {module:model/NestedCategory}
     */
    NestedCategory: NestedCategory,
    /**
     * The NewPasswordRequest model constructor.
     * @property {module:model/NewPasswordRequest}
     */
    NewPasswordRequest: NewPasswordRequest,
    /**
     * The OauthAccessTokenResource model constructor.
     * @property {module:model/OauthAccessTokenResource}
     */
    OauthAccessTokenResource: OauthAccessTokenResource,
    /**
     * The Operator model constructor.
     * @property {module:model/Operator}
     */
    Operator: Operator,
    /**
     * The OptimalPaymentRequest model constructor.
     * @property {module:model/OptimalPaymentRequest}
     */
    OptimalPaymentRequest: OptimalPaymentRequest,
    /**
     * The PageAchievementDefinitionResource model constructor.
     * @property {module:model/PageAchievementDefinitionResource}
     */
    PageAchievementDefinitionResource: PageAchievementDefinitionResource,
    /**
     * The PageAggregateCountResource model constructor.
     * @property {module:model/PageAggregateCountResource}
     */
    PageAggregateCountResource: PageAggregateCountResource,
    /**
     * The PageAggregateInvoiceReportResource model constructor.
     * @property {module:model/PageAggregateInvoiceReportResource}
     */
    PageAggregateInvoiceReportResource: PageAggregateInvoiceReportResource,
    /**
     * The PageArticleResource model constructor.
     * @property {module:model/PageArticleResource}
     */
    PageArticleResource: PageArticleResource,
    /**
     * The PageArtistResource model constructor.
     * @property {module:model/PageArtistResource}
     */
    PageArtistResource: PageArtistResource,
    /**
     * The PageBareActivityResource model constructor.
     * @property {module:model/PageBareActivityResource}
     */
    PageBareActivityResource: PageBareActivityResource,
    /**
     * The PageBareChallengeActivityResource model constructor.
     * @property {module:model/PageBareChallengeActivityResource}
     */
    PageBareChallengeActivityResource: PageBareChallengeActivityResource,
    /**
     * The PageBillingReport model constructor.
     * @property {module:model/PageBillingReport}
     */
    PageBillingReport: PageBillingReport,
    /**
     * The PageBreCategoryResource model constructor.
     * @property {module:model/PageBreCategoryResource}
     */
    PageBreCategoryResource: PageBreCategoryResource,
    /**
     * The PageBreEventLog model constructor.
     * @property {module:model/PageBreEventLog}
     */
    PageBreEventLog: PageBreEventLog,
    /**
     * The PageBreGlobalResource model constructor.
     * @property {module:model/PageBreGlobalResource}
     */
    PageBreGlobalResource: PageBreGlobalResource,
    /**
     * The PageBreRule model constructor.
     * @property {module:model/PageBreRule}
     */
    PageBreRule: PageBreRule,
    /**
     * The PageBreTriggerResource model constructor.
     * @property {module:model/PageBreTriggerResource}
     */
    PageBreTriggerResource: PageBreTriggerResource,
    /**
     * The PageCampaignResource model constructor.
     * @property {module:model/PageCampaignResource}
     */
    PageCampaignResource: PageCampaignResource,
    /**
     * The PageCartSummary model constructor.
     * @property {module:model/PageCartSummary}
     */
    PageCartSummary: PageCartSummary,
    /**
     * The PageCatalogSale model constructor.
     * @property {module:model/PageCatalogSale}
     */
    PageCatalogSale: PageCatalogSale,
    /**
     * The PageCategoryResource model constructor.
     * @property {module:model/PageCategoryResource}
     */
    PageCategoryResource: PageCategoryResource,
    /**
     * The PageChallengeEventParticipantResource model constructor.
     * @property {module:model/PageChallengeEventParticipantResource}
     */
    PageChallengeEventParticipantResource: PageChallengeEventParticipantResource,
    /**
     * The PageChallengeEventResource model constructor.
     * @property {module:model/PageChallengeEventResource}
     */
    PageChallengeEventResource: PageChallengeEventResource,
    /**
     * The PageChallengeResource model constructor.
     * @property {module:model/PageChallengeResource}
     */
    PageChallengeResource: PageChallengeResource,
    /**
     * The PageClientResource model constructor.
     * @property {module:model/PageClientResource}
     */
    PageClientResource: PageClientResource,
    /**
     * The PageCommentResource model constructor.
     * @property {module:model/PageCommentResource}
     */
    PageCommentResource: PageCommentResource,
    /**
     * The PageConfig model constructor.
     * @property {module:model/PageConfig}
     */
    PageConfig: PageConfig,
    /**
     * The PageCountryTaxResource model constructor.
     * @property {module:model/PageCountryTaxResource}
     */
    PageCountryTaxResource: PageCountryTaxResource,
    /**
     * The PageCurrencyResource model constructor.
     * @property {module:model/PageCurrencyResource}
     */
    PageCurrencyResource: PageCurrencyResource,
    /**
     * The PageDeviceResource model constructor.
     * @property {module:model/PageDeviceResource}
     */
    PageDeviceResource: PageDeviceResource,
    /**
     * The PageDispositionResource model constructor.
     * @property {module:model/PageDispositionResource}
     */
    PageDispositionResource: PageDispositionResource,
    /**
     * The PageEntitlementItem model constructor.
     * @property {module:model/PageEntitlementItem}
     */
    PageEntitlementItem: PageEntitlementItem,
    /**
     * The PageFlagReportResource model constructor.
     * @property {module:model/PageFlagReportResource}
     */
    PageFlagReportResource: PageFlagReportResource,
    /**
     * The PageForwardLog model constructor.
     * @property {module:model/PageForwardLog}
     */
    PageForwardLog: PageForwardLog,
    /**
     * The PageFulfillmentType model constructor.
     * @property {module:model/PageFulfillmentType}
     */
    PageFulfillmentType: PageFulfillmentType,
    /**
     * The PageGroupMemberResource model constructor.
     * @property {module:model/PageGroupMemberResource}
     */
    PageGroupMemberResource: PageGroupMemberResource,
    /**
     * The PageGroupResource model constructor.
     * @property {module:model/PageGroupResource}
     */
    PageGroupResource: PageGroupResource,
    /**
     * The PageImportJobResource model constructor.
     * @property {module:model/PageImportJobResource}
     */
    PageImportJobResource: PageImportJobResource,
    /**
     * The PageInvoiceLogEntry model constructor.
     * @property {module:model/PageInvoiceLogEntry}
     */
    PageInvoiceLogEntry: PageInvoiceLogEntry,
    /**
     * The PageInvoiceResource model constructor.
     * @property {module:model/PageInvoiceResource}
     */
    PageInvoiceResource: PageInvoiceResource,
    /**
     * The PageItemTemplateResource model constructor.
     * @property {module:model/PageItemTemplateResource}
     */
    PageItemTemplateResource: PageItemTemplateResource,
    /**
     * The PageLevelingResource model constructor.
     * @property {module:model/PageLevelingResource}
     */
    PageLevelingResource: PageLevelingResource,
    /**
     * The PageLocationLogResource model constructor.
     * @property {module:model/PageLocationLogResource}
     */
    PageLocationLogResource: PageLocationLogResource,
    /**
     * The PageMapstringobject model constructor.
     * @property {module:model/PageMapstringobject}
     */
    PageMapstringobject: PageMapstringobject,
    /**
     * The PageOauthAccessTokenResource model constructor.
     * @property {module:model/PageOauthAccessTokenResource}
     */
    PageOauthAccessTokenResource: PageOauthAccessTokenResource,
    /**
     * The PagePermissionResource model constructor.
     * @property {module:model/PagePermissionResource}
     */
    PagePermissionResource: PagePermissionResource,
    /**
     * The PagePollResource model constructor.
     * @property {module:model/PagePollResource}
     */
    PagePollResource: PagePollResource,
    /**
     * The PageQuestionResource model constructor.
     * @property {module:model/PageQuestionResource}
     */
    PageQuestionResource: PageQuestionResource,
    /**
     * The PageQuestionTemplateResource model constructor.
     * @property {module:model/PageQuestionTemplateResource}
     */
    PageQuestionTemplateResource: PageQuestionTemplateResource,
    /**
     * The PageRevenueCountryReportResource model constructor.
     * @property {module:model/PageRevenueCountryReportResource}
     */
    PageRevenueCountryReportResource: PageRevenueCountryReportResource,
    /**
     * The PageRevenueProductReportResource model constructor.
     * @property {module:model/PageRevenueProductReportResource}
     */
    PageRevenueProductReportResource: PageRevenueProductReportResource,
    /**
     * The PageRewardSetResource model constructor.
     * @property {module:model/PageRewardSetResource}
     */
    PageRewardSetResource: PageRewardSetResource,
    /**
     * The PageRoleResource model constructor.
     * @property {module:model/PageRoleResource}
     */
    PageRoleResource: PageRoleResource,
    /**
     * The PageSavedAddressResource model constructor.
     * @property {module:model/PageSavedAddressResource}
     */
    PageSavedAddressResource: PageSavedAddressResource,
    /**
     * The PageSimpleUserResource model constructor.
     * @property {module:model/PageSimpleUserResource}
     */
    PageSimpleUserResource: PageSimpleUserResource,
    /**
     * The PageSimpleWallet model constructor.
     * @property {module:model/PageSimpleWallet}
     */
    PageSimpleWallet: PageSimpleWallet,
    /**
     * The PageStateTaxResource model constructor.
     * @property {module:model/PageStateTaxResource}
     */
    PageStateTaxResource: PageStateTaxResource,
    /**
     * The PageStoreItem model constructor.
     * @property {module:model/PageStoreItem}
     */
    PageStoreItem: PageStoreItem,
    /**
     * The PageStoreItemTemplateResource model constructor.
     * @property {module:model/PageStoreItemTemplateResource}
     */
    PageStoreItemTemplateResource: PageStoreItemTemplateResource,
    /**
     * The PageSubscriptionResource model constructor.
     * @property {module:model/PageSubscriptionResource}
     */
    PageSubscriptionResource: PageSubscriptionResource,
    /**
     * The PageSubscriptionTemplateResource model constructor.
     * @property {module:model/PageSubscriptionTemplateResource}
     */
    PageSubscriptionTemplateResource: PageSubscriptionTemplateResource,
    /**
     * The PageTemplateResource model constructor.
     * @property {module:model/PageTemplateResource}
     */
    PageTemplateResource: PageTemplateResource,
    /**
     * The PageTransactionResource model constructor.
     * @property {module:model/PageTransactionResource}
     */
    PageTransactionResource: PageTransactionResource,
    /**
     * The PageUsageInfo model constructor.
     * @property {module:model/PageUsageInfo}
     */
    PageUsageInfo: PageUsageInfo,
    /**
     * The PageUserAchievementGroupResource model constructor.
     * @property {module:model/PageUserAchievementGroupResource}
     */
    PageUserAchievementGroupResource: PageUserAchievementGroupResource,
    /**
     * The PageUserActionLog model constructor.
     * @property {module:model/PageUserActionLog}
     */
    PageUserActionLog: PageUserActionLog,
    /**
     * The PageUserBaseResource model constructor.
     * @property {module:model/PageUserBaseResource}
     */
    PageUserBaseResource: PageUserBaseResource,
    /**
     * The PageUserInventoryResource model constructor.
     * @property {module:model/PageUserInventoryResource}
     */
    PageUserInventoryResource: PageUserInventoryResource,
    /**
     * The PageUserItemLogResource model constructor.
     * @property {module:model/PageUserItemLogResource}
     */
    PageUserItemLogResource: PageUserItemLogResource,
    /**
     * The PageUserLevelingResource model constructor.
     * @property {module:model/PageUserLevelingResource}
     */
    PageUserLevelingResource: PageUserLevelingResource,
    /**
     * The PageUserRelationshipResource model constructor.
     * @property {module:model/PageUserRelationshipResource}
     */
    PageUserRelationshipResource: PageUserRelationshipResource,
    /**
     * The PageVendorResource model constructor.
     * @property {module:model/PageVendorResource}
     */
    PageVendorResource: PageVendorResource,
    /**
     * The PageVideoRelationshipResource model constructor.
     * @property {module:model/PageVideoRelationshipResource}
     */
    PageVideoRelationshipResource: PageVideoRelationshipResource,
    /**
     * The PageVideoResource model constructor.
     * @property {module:model/PageVideoResource}
     */
    PageVideoResource: PageVideoResource,
    /**
     * The PageWalletTotalResponse model constructor.
     * @property {module:model/PageWalletTotalResponse}
     */
    PageWalletTotalResponse: PageWalletTotalResponse,
    /**
     * The PageWalletTransactionResource model constructor.
     * @property {module:model/PageWalletTransactionResource}
     */
    PageWalletTransactionResource: PageWalletTransactionResource,
    /**
     * The Pagestring model constructor.
     * @property {module:model/Pagestring}
     */
    Pagestring: Pagestring,
    /**
     * The PayBySavedMethodRequest model constructor.
     * @property {module:model/PayBySavedMethodRequest}
     */
    PayBySavedMethodRequest: PayBySavedMethodRequest,
    /**
     * The PaymentAuthorizationResource model constructor.
     * @property {module:model/PaymentAuthorizationResource}
     */
    PaymentAuthorizationResource: PaymentAuthorizationResource,
    /**
     * The PaymentMethodResource model constructor.
     * @property {module:model/PaymentMethodResource}
     */
    PaymentMethodResource: PaymentMethodResource,
    /**
     * The PaymentMethodTypeResource model constructor.
     * @property {module:model/PaymentMethodTypeResource}
     */
    PaymentMethodTypeResource: PaymentMethodTypeResource,
    /**
     * The Permission model constructor.
     * @property {module:model/Permission}
     */
    Permission: Permission,
    /**
     * The PermissionResource model constructor.
     * @property {module:model/PermissionResource}
     */
    PermissionResource: PermissionResource,
    /**
     * The PollAnswerResource model constructor.
     * @property {module:model/PollAnswerResource}
     */
    PollAnswerResource: PollAnswerResource,
    /**
     * The PollResource model constructor.
     * @property {module:model/PollResource}
     */
    PollResource: PollResource,
    /**
     * The PollResponseResource model constructor.
     * @property {module:model/PollResponseResource}
     */
    PollResponseResource: PollResponseResource,
    /**
     * The PredicateOperation model constructor.
     * @property {module:model/PredicateOperation}
     */
    PredicateOperation: PredicateOperation,
    /**
     * The Property model constructor.
     * @property {module:model/Property}
     */
    Property: Property,
    /**
     * The PropertyDefinitionResource model constructor.
     * @property {module:model/PropertyDefinitionResource}
     */
    PropertyDefinitionResource: PropertyDefinitionResource,
    /**
     * The QuestionResource model constructor.
     * @property {module:model/QuestionResource}
     */
    QuestionResource: QuestionResource,
    /**
     * The QuestionTemplateResource model constructor.
     * @property {module:model/QuestionTemplateResource}
     */
    QuestionTemplateResource: QuestionTemplateResource,
    /**
     * The RawEmailResource model constructor.
     * @property {module:model/RawEmailResource}
     */
    RawEmailResource: RawEmailResource,
    /**
     * The RawSMSResource model constructor.
     * @property {module:model/RawSMSResource}
     */
    RawSMSResource: RawSMSResource,
    /**
     * The ReactivateSubscriptionRequest model constructor.
     * @property {module:model/ReactivateSubscriptionRequest}
     */
    ReactivateSubscriptionRequest: ReactivateSubscriptionRequest,
    /**
     * The RefundRequest model constructor.
     * @property {module:model/RefundRequest}
     */
    RefundRequest: RefundRequest,
    /**
     * The RefundResource model constructor.
     * @property {module:model/RefundResource}
     */
    RefundResource: RefundResource,
    /**
     * The Result model constructor.
     * @property {module:model/Result}
     */
    Result: Result,
    /**
     * The RevenueCountryReportResource model constructor.
     * @property {module:model/RevenueCountryReportResource}
     */
    RevenueCountryReportResource: RevenueCountryReportResource,
    /**
     * The RevenueProductReportResource model constructor.
     * @property {module:model/RevenueProductReportResource}
     */
    RevenueProductReportResource: RevenueProductReportResource,
    /**
     * The RevenueReportResource model constructor.
     * @property {module:model/RevenueReportResource}
     */
    RevenueReportResource: RevenueReportResource,
    /**
     * The RewardCurrencyResource model constructor.
     * @property {module:model/RewardCurrencyResource}
     */
    RewardCurrencyResource: RewardCurrencyResource,
    /**
     * The RewardItemResource model constructor.
     * @property {module:model/RewardItemResource}
     */
    RewardItemResource: RewardItemResource,
    /**
     * The RewardSetResource model constructor.
     * @property {module:model/RewardSetResource}
     */
    RewardSetResource: RewardSetResource,
    /**
     * The Role model constructor.
     * @property {module:model/Role}
     */
    Role: Role,
    /**
     * The RoleResource model constructor.
     * @property {module:model/RoleResource}
     */
    RoleResource: RoleResource,
    /**
     * The SampleCountriesResponse model constructor.
     * @property {module:model/SampleCountriesResponse}
     */
    SampleCountriesResponse: SampleCountriesResponse,
    /**
     * The SavedAddressResource model constructor.
     * @property {module:model/SavedAddressResource}
     */
    SavedAddressResource: SavedAddressResource,
    /**
     * The Schedule model constructor.
     * @property {module:model/Schedule}
     */
    Schedule: Schedule,
    /**
     * The SearchReferenceMapping model constructor.
     * @property {module:model/SearchReferenceMapping}
     */
    SearchReferenceMapping: SearchReferenceMapping,
    /**
     * The SelectedSettingResource model constructor.
     * @property {module:model/SelectedSettingResource}
     */
    SelectedSettingResource: SelectedSettingResource,
    /**
     * The SettingOption model constructor.
     * @property {module:model/SettingOption}
     */
    SettingOption: SettingOption,
    /**
     * The ShippingItem model constructor.
     * @property {module:model/ShippingItem}
     */
    ShippingItem: ShippingItem,
    /**
     * The SimpleReferenceResourceint model constructor.
     * @property {module:model/SimpleReferenceResourceint}
     */
    SimpleReferenceResourceint: SimpleReferenceResourceint,
    /**
     * The SimpleReferenceResourcelong model constructor.
     * @property {module:model/SimpleReferenceResourcelong}
     */
    SimpleReferenceResourcelong: SimpleReferenceResourcelong,
    /**
     * The SimpleReferenceResourcestring model constructor.
     * @property {module:model/SimpleReferenceResourcestring}
     */
    SimpleReferenceResourcestring: SimpleReferenceResourcestring,
    /**
     * The SimpleUserResource model constructor.
     * @property {module:model/SimpleUserResource}
     */
    SimpleUserResource: SimpleUserResource,
    /**
     * The SimpleWallet model constructor.
     * @property {module:model/SimpleWallet}
     */
    SimpleWallet: SimpleWallet,
    /**
     * The Sku model constructor.
     * @property {module:model/Sku}
     */
    Sku: Sku,
    /**
     * The SkuRequest model constructor.
     * @property {module:model/SkuRequest}
     */
    SkuRequest: SkuRequest,
    /**
     * The Sort model constructor.
     * @property {module:model/Sort}
     */
    Sort: Sort,
    /**
     * The SqlDatabaseConfig model constructor.
     * @property {module:model/SqlDatabaseConfig}
     */
    SqlDatabaseConfig: SqlDatabaseConfig,
    /**
     * The StateResource model constructor.
     * @property {module:model/StateResource}
     */
    StateResource: StateResource,
    /**
     * The StateTaxResource model constructor.
     * @property {module:model/StateTaxResource}
     */
    StateTaxResource: StateTaxResource,
    /**
     * The StoreItem model constructor.
     * @property {module:model/StoreItem}
     */
    StoreItem: StoreItem,
    /**
     * The StoreItemTemplateResource model constructor.
     * @property {module:model/StoreItemTemplateResource}
     */
    StoreItemTemplateResource: StoreItemTemplateResource,
    /**
     * The StoreListRequest model constructor.
     * @property {module:model/StoreListRequest}
     */
    StoreListRequest: StoreListRequest,
    /**
     * The StripeCreatePaymentMethod model constructor.
     * @property {module:model/StripeCreatePaymentMethod}
     */
    StripeCreatePaymentMethod: StripeCreatePaymentMethod,
    /**
     * The StripePaymentRequest model constructor.
     * @property {module:model/StripePaymentRequest}
     */
    StripePaymentRequest: StripePaymentRequest,
    /**
     * The SubscriptionCreditResource model constructor.
     * @property {module:model/SubscriptionCreditResource}
     */
    SubscriptionCreditResource: SubscriptionCreditResource,
    /**
     * The SubscriptionPlanResource model constructor.
     * @property {module:model/SubscriptionPlanResource}
     */
    SubscriptionPlanResource: SubscriptionPlanResource,
    /**
     * The SubscriptionResource model constructor.
     * @property {module:model/SubscriptionResource}
     */
    SubscriptionResource: SubscriptionResource,
    /**
     * The SubscriptionTemplateResource model constructor.
     * @property {module:model/SubscriptionTemplateResource}
     */
    SubscriptionTemplateResource: SubscriptionTemplateResource,
    /**
     * The TemplateEmailResource model constructor.
     * @property {module:model/TemplateEmailResource}
     */
    TemplateEmailResource: TemplateEmailResource,
    /**
     * The TemplateResource model constructor.
     * @property {module:model/TemplateResource}
     */
    TemplateResource: TemplateResource,
    /**
     * The TemplateSMSResource model constructor.
     * @property {module:model/TemplateSMSResource}
     */
    TemplateSMSResource: TemplateSMSResource,
    /**
     * The TierResource model constructor.
     * @property {module:model/TierResource}
     */
    TierResource: TierResource,
    /**
     * The Timezone model constructor.
     * @property {module:model/Timezone}
     */
    Timezone: Timezone,
    /**
     * The TokenDetailsResource model constructor.
     * @property {module:model/TokenDetailsResource}
     */
    TokenDetailsResource: TokenDetailsResource,
    /**
     * The TransactionResource model constructor.
     * @property {module:model/TransactionResource}
     */
    TransactionResource: TransactionResource,
    /**
     * The UsageInfo model constructor.
     * @property {module:model/UsageInfo}
     */
    UsageInfo: UsageInfo,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserAchievementGroupResource model constructor.
     * @property {module:model/UserAchievementGroupResource}
     */
    UserAchievementGroupResource: UserAchievementGroupResource,
    /**
     * The UserAchievementResource model constructor.
     * @property {module:model/UserAchievementResource}
     */
    UserAchievementResource: UserAchievementResource,
    /**
     * The UserActionLog model constructor.
     * @property {module:model/UserActionLog}
     */
    UserActionLog: UserActionLog,
    /**
     * The UserActivityResultsResource model constructor.
     * @property {module:model/UserActivityResultsResource}
     */
    UserActivityResultsResource: UserActivityResultsResource,
    /**
     * The UserBaseResource model constructor.
     * @property {module:model/UserBaseResource}
     */
    UserBaseResource: UserBaseResource,
    /**
     * The UserInventoryAddRequest model constructor.
     * @property {module:model/UserInventoryAddRequest}
     */
    UserInventoryAddRequest: UserInventoryAddRequest,
    /**
     * The UserInventoryResource model constructor.
     * @property {module:model/UserInventoryResource}
     */
    UserInventoryResource: UserInventoryResource,
    /**
     * The UserItemLogResource model constructor.
     * @property {module:model/UserItemLogResource}
     */
    UserItemLogResource: UserItemLogResource,
    /**
     * The UserLevelingResource model constructor.
     * @property {module:model/UserLevelingResource}
     */
    UserLevelingResource: UserLevelingResource,
    /**
     * The UserRelationship model constructor.
     * @property {module:model/UserRelationship}
     */
    UserRelationship: UserRelationship,
    /**
     * The UserRelationshipReferenceResource model constructor.
     * @property {module:model/UserRelationshipReferenceResource}
     */
    UserRelationshipReferenceResource: UserRelationshipReferenceResource,
    /**
     * The UserRelationshipResource model constructor.
     * @property {module:model/UserRelationshipResource}
     */
    UserRelationshipResource: UserRelationshipResource,
    /**
     * The UserResource model constructor.
     * @property {module:model/UserResource}
     */
    UserResource: UserResource,
    /**
     * The UserTag model constructor.
     * @property {module:model/UserTag}
     */
    UserTag: UserTag,
    /**
     * The VariableTypeResource model constructor.
     * @property {module:model/VariableTypeResource}
     */
    VariableTypeResource: VariableTypeResource,
    /**
     * The VendorResource model constructor.
     * @property {module:model/VendorResource}
     */
    VendorResource: VendorResource,
    /**
     * The Video model constructor.
     * @property {module:model/Video}
     */
    Video: Video,
    /**
     * The VideoContribution model constructor.
     * @property {module:model/VideoContribution}
     */
    VideoContribution: VideoContribution,
    /**
     * The VideoRelationshipResource model constructor.
     * @property {module:model/VideoRelationshipResource}
     */
    VideoRelationshipResource: VideoRelationshipResource,
    /**
     * The VideoResource model constructor.
     * @property {module:model/VideoResource}
     */
    VideoResource: VideoResource,
    /**
     * The VideoTag model constructor.
     * @property {module:model/VideoTag}
     */
    VideoTag: VideoTag,
    /**
     * The WalletAlterRequest model constructor.
     * @property {module:model/WalletAlterRequest}
     */
    WalletAlterRequest: WalletAlterRequest,
    /**
     * The WalletTotalResponse model constructor.
     * @property {module:model/WalletTotalResponse}
     */
    WalletTotalResponse: WalletTotalResponse,
    /**
     * The WalletTransactionResource model constructor.
     * @property {module:model/WalletTransactionResource}
     */
    WalletTransactionResource: WalletTransactionResource,
    /**
     * The XsollaPaymentRequest model constructor.
     * @property {module:model/XsollaPaymentRequest}
     */
    XsollaPaymentRequest: XsollaPaymentRequest,
    /**
     * The AWSS3Api service constructor.
     * @property {module:api/AWSS3Api}
     */
    AWSS3Api: AWSS3Api,
    /**
     * The ActivitiesApi service constructor.
     * @property {module:api/ActivitiesApi}
     */
    ActivitiesApi: ActivitiesApi,
    /**
     * The AuthClientsApi service constructor.
     * @property {module:api/AuthClientsApi}
     */
    AuthClientsApi: AuthClientsApi,
    /**
     * The AuthPermissionsApi service constructor.
     * @property {module:api/AuthPermissionsApi}
     */
    AuthPermissionsApi: AuthPermissionsApi,
    /**
     * The AuthRolesApi service constructor.
     * @property {module:api/AuthRolesApi}
     */
    AuthRolesApi: AuthRolesApi,
    /**
     * The AuthTokensApi service constructor.
     * @property {module:api/AuthTokensApi}
     */
    AuthTokensApi: AuthTokensApi,
    /**
     * The BRERuleEngineActionsApi service constructor.
     * @property {module:api/BRERuleEngineActionsApi}
     */
    BRERuleEngineActionsApi: BRERuleEngineActionsApi,
    /**
     * The BRERuleEngineCategoriesApi service constructor.
     * @property {module:api/BRERuleEngineCategoriesApi}
     */
    BRERuleEngineCategoriesApi: BRERuleEngineCategoriesApi,
    /**
     * The BRERuleEngineEventsApi service constructor.
     * @property {module:api/BRERuleEngineEventsApi}
     */
    BRERuleEngineEventsApi: BRERuleEngineEventsApi,
    /**
     * The BRERuleEngineExpressionsApi service constructor.
     * @property {module:api/BRERuleEngineExpressionsApi}
     */
    BRERuleEngineExpressionsApi: BRERuleEngineExpressionsApi,
    /**
     * The BRERuleEngineGlobalsApi service constructor.
     * @property {module:api/BRERuleEngineGlobalsApi}
     */
    BRERuleEngineGlobalsApi: BRERuleEngineGlobalsApi,
    /**
     * The BRERuleEngineRulesApi service constructor.
     * @property {module:api/BRERuleEngineRulesApi}
     */
    BRERuleEngineRulesApi: BRERuleEngineRulesApi,
    /**
     * The BRERuleEngineTriggersApi service constructor.
     * @property {module:api/BRERuleEngineTriggersApi}
     */
    BRERuleEngineTriggersApi: BRERuleEngineTriggersApi,
    /**
     * The BRERuleEngineVariablesApi service constructor.
     * @property {module:api/BRERuleEngineVariablesApi}
     */
    BRERuleEngineVariablesApi: BRERuleEngineVariablesApi,
    /**
     * The CampaignsApi service constructor.
     * @property {module:api/CampaignsApi}
     */
    CampaignsApi: CampaignsApi,
    /**
     * The CampaignsChallengesApi service constructor.
     * @property {module:api/CampaignsChallengesApi}
     */
    CampaignsChallengesApi: CampaignsChallengesApi,
    /**
     * The CampaignsRewardsApi service constructor.
     * @property {module:api/CampaignsRewardsApi}
     */
    CampaignsRewardsApi: CampaignsRewardsApi,
    /**
     * The CategoriesApi service constructor.
     * @property {module:api/CategoriesApi}
     */
    CategoriesApi: CategoriesApi,
    /**
     * The ConfigsApi service constructor.
     * @property {module:api/ConfigsApi}
     */
    ConfigsApi: ConfigsApi,
    /**
     * The ContentArticlesApi service constructor.
     * @property {module:api/ContentArticlesApi}
     */
    ContentArticlesApi: ContentArticlesApi,
    /**
     * The ContentCommentsApi service constructor.
     * @property {module:api/ContentCommentsApi}
     */
    ContentCommentsApi: ContentCommentsApi,
    /**
     * The ContentPollsApi service constructor.
     * @property {module:api/ContentPollsApi}
     */
    ContentPollsApi: ContentPollsApi,
    /**
     * The CurrenciesApi service constructor.
     * @property {module:api/CurrenciesApi}
     */
    CurrenciesApi: CurrenciesApi,
    /**
     * The CustomerserviceApi service constructor.
     * @property {module:api/CustomerserviceApi}
     */
    CustomerserviceApi: CustomerserviceApi,
    /**
     * The DevicesApi service constructor.
     * @property {module:api/DevicesApi}
     */
    DevicesApi: DevicesApi,
    /**
     * The DispositionsApi service constructor.
     * @property {module:api/DispositionsApi}
     */
    DispositionsApi: DispositionsApi,
    /**
     * The FulfillmentApi service constructor.
     * @property {module:api/FulfillmentApi}
     */
    FulfillmentApi: FulfillmentApi,
    /**
     * The GamificationAchievementsApi service constructor.
     * @property {module:api/GamificationAchievementsApi}
     */
    GamificationAchievementsApi: GamificationAchievementsApi,
    /**
     * The GamificationLeaderboardsApi service constructor.
     * @property {module:api/GamificationLeaderboardsApi}
     */
    GamificationLeaderboardsApi: GamificationLeaderboardsApi,
    /**
     * The GamificationLevelingApi service constructor.
     * @property {module:api/GamificationLevelingApi}
     */
    GamificationLevelingApi: GamificationLevelingApi,
    /**
     * The GamificationMetricsApi service constructor.
     * @property {module:api/GamificationMetricsApi}
     */
    GamificationMetricsApi: GamificationMetricsApi,
    /**
     * The GamificationTriviaApi service constructor.
     * @property {module:api/GamificationTriviaApi}
     */
    GamificationTriviaApi: GamificationTriviaApi,
    /**
     * The InvoicesApi service constructor.
     * @property {module:api/InvoicesApi}
     */
    InvoicesApi: InvoicesApi,
    /**
     * The LocationsApi service constructor.
     * @property {module:api/LocationsApi}
     */
    LocationsApi: LocationsApi,
    /**
     * The LogsApi service constructor.
     * @property {module:api/LogsApi}
     */
    LogsApi: LogsApi,
    /**
     * The MediaArtistsApi service constructor.
     * @property {module:api/MediaArtistsApi}
     */
    MediaArtistsApi: MediaArtistsApi,
    /**
     * The MediaModerationApi service constructor.
     * @property {module:api/MediaModerationApi}
     */
    MediaModerationApi: MediaModerationApi,
    /**
     * The MediaVideosApi service constructor.
     * @property {module:api/MediaVideosApi}
     */
    MediaVideosApi: MediaVideosApi,
    /**
     * The MessagingApi service constructor.
     * @property {module:api/MessagingApi}
     */
    MessagingApi: MessagingApi,
    /**
     * The PaymentsApi service constructor.
     * @property {module:api/PaymentsApi}
     */
    PaymentsApi: PaymentsApi,
    /**
     * The PaymentsAppleApi service constructor.
     * @property {module:api/PaymentsAppleApi}
     */
    PaymentsAppleApi: PaymentsAppleApi,
    /**
     * The PaymentsGoogleApi service constructor.
     * @property {module:api/PaymentsGoogleApi}
     */
    PaymentsGoogleApi: PaymentsGoogleApi,
    /**
     * The PaymentsOptimalApi service constructor.
     * @property {module:api/PaymentsOptimalApi}
     */
    PaymentsOptimalApi: PaymentsOptimalApi,
    /**
     * The PaymentsPayPalClassicApi service constructor.
     * @property {module:api/PaymentsPayPalClassicApi}
     */
    PaymentsPayPalClassicApi: PaymentsPayPalClassicApi,
    /**
     * The PaymentsStripeApi service constructor.
     * @property {module:api/PaymentsStripeApi}
     */
    PaymentsStripeApi: PaymentsStripeApi,
    /**
     * The PaymentsTransactionsApi service constructor.
     * @property {module:api/PaymentsTransactionsApi}
     */
    PaymentsTransactionsApi: PaymentsTransactionsApi,
    /**
     * The PaymentsWalletsApi service constructor.
     * @property {module:api/PaymentsWalletsApi}
     */
    PaymentsWalletsApi: PaymentsWalletsApi,
    /**
     * The PaymentsXsollaApi service constructor.
     * @property {module:api/PaymentsXsollaApi}
     */
    PaymentsXsollaApi: PaymentsXsollaApi,
    /**
     * The ReportingChallengesApi service constructor.
     * @property {module:api/ReportingChallengesApi}
     */
    ReportingChallengesApi: ReportingChallengesApi,
    /**
     * The ReportingOrdersApi service constructor.
     * @property {module:api/ReportingOrdersApi}
     */
    ReportingOrdersApi: ReportingOrdersApi,
    /**
     * The ReportingRevenueApi service constructor.
     * @property {module:api/ReportingRevenueApi}
     */
    ReportingRevenueApi: ReportingRevenueApi,
    /**
     * The ReportingSubscriptionsApi service constructor.
     * @property {module:api/ReportingSubscriptionsApi}
     */
    ReportingSubscriptionsApi: ReportingSubscriptionsApi,
    /**
     * The ReportingUsageApi service constructor.
     * @property {module:api/ReportingUsageApi}
     */
    ReportingUsageApi: ReportingUsageApi,
    /**
     * The ReportingUsersApi service constructor.
     * @property {module:api/ReportingUsersApi}
     */
    ReportingUsersApi: ReportingUsersApi,
    /**
     * The SearchApi service constructor.
     * @property {module:api/SearchApi}
     */
    SearchApi: SearchApi,
    /**
     * The StoreApi service constructor.
     * @property {module:api/StoreApi}
     */
    StoreApi: StoreApi,
    /**
     * The StoreBundlesApi service constructor.
     * @property {module:api/StoreBundlesApi}
     */
    StoreBundlesApi: StoreBundlesApi,
    /**
     * The StoreCouponsApi service constructor.
     * @property {module:api/StoreCouponsApi}
     */
    StoreCouponsApi: StoreCouponsApi,
    /**
     * The StoreSalesApi service constructor.
     * @property {module:api/StoreSalesApi}
     */
    StoreSalesApi: StoreSalesApi,
    /**
     * The StoreShippingApi service constructor.
     * @property {module:api/StoreShippingApi}
     */
    StoreShippingApi: StoreShippingApi,
    /**
     * The StoreShoppingCartsApi service constructor.
     * @property {module:api/StoreShoppingCartsApi}
     */
    StoreShoppingCartsApi: StoreShoppingCartsApi,
    /**
     * The StoreSubscriptionsApi service constructor.
     * @property {module:api/StoreSubscriptionsApi}
     */
    StoreSubscriptionsApi: StoreSubscriptionsApi,
    /**
     * The StoreVendorsApi service constructor.
     * @property {module:api/StoreVendorsApi}
     */
    StoreVendorsApi: StoreVendorsApi,
    /**
     * The TaxesApi service constructor.
     * @property {module:api/TaxesApi}
     */
    TaxesApi: TaxesApi,
    /**
     * The UsersApi service constructor.
     * @property {module:api/UsersApi}
     */
    UsersApi: UsersApi,
    /**
     * The UsersAddressesApi service constructor.
     * @property {module:api/UsersAddressesApi}
     */
    UsersAddressesApi: UsersAddressesApi,
    /**
     * The UsersFriendshipsApi service constructor.
     * @property {module:api/UsersFriendshipsApi}
     */
    UsersFriendshipsApi: UsersFriendshipsApi,
    /**
     * The UsersGroupsApi service constructor.
     * @property {module:api/UsersGroupsApi}
     */
    UsersGroupsApi: UsersGroupsApi,
    /**
     * The UsersInventoryApi service constructor.
     * @property {module:api/UsersInventoryApi}
     */
    UsersInventoryApi: UsersInventoryApi,
    /**
     * The UsersRelationshipsApi service constructor.
     * @property {module:api/UsersRelationshipsApi}
     */
    UsersRelationshipsApi: UsersRelationshipsApi,
    /**
     * The UsersSubscriptionsApi service constructor.
     * @property {module:api/UsersSubscriptionsApi}
     */
    UsersSubscriptionsApi: UsersSubscriptionsApi,
    /**
     * The UtilBatchApi service constructor.
     * @property {module:api/UtilBatchApi}
     */
    UtilBatchApi: UtilBatchApi,
    /**
     * The UtilHealthApi service constructor.
     * @property {module:api/UtilHealthApi}
     */
    UtilHealthApi: UtilHealthApi,
    /**
     * The UtilMaintenanceApi service constructor.
     * @property {module:api/UtilMaintenanceApi}
     */
    UtilMaintenanceApi: UtilMaintenanceApi,
    /**
     * The UtilSecurityApi service constructor.
     * @property {module:api/UtilSecurityApi}
     */
    UtilSecurityApi: UtilSecurityApi
  };

  return exports;
}));
