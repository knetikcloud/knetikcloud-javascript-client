/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import ActionVariableResource from './ActionVariableResource';





/**
* The ActionResource model module.
* @module model/ActionResource
* @version 3.0.7
*/
export default class ActionResource {
    /**
    * Constructs a new <code>ActionResource</code>.
    * @alias module:model/ActionResource
    * @class
    * @param description {String} The description of the action
    * @param name {String} The name of the action. Used as the unique id for reference
    * @param variables {Array.<module:model/ActionVariableResource>} The variables required for the action
    */

    constructor(description, name, variables) {
        

        
        

        this['description'] = description;this['name'] = name;this['variables'] = variables;

        
    }

    /**
    * Constructs a <code>ActionResource</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ActionResource} obj Optional instance to populate.
    * @return {module:model/ActionResource} The populated <code>ActionResource</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActionResource();

            
            
            

            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('variables')) {
                obj['variables'] = ApiClient.convertToType(data['variables'], [ActionVariableResource]);
            }
        }
        return obj;
    }

    /**
    * The category the action is in. All customer specific actions are in the 'custom' category
    * @member {module:model/ActionResource.CategoryEnum} category
    */
    category = undefined;
    /**
    * The description of the action
    * @member {String} description
    */
    description = undefined;
    /**
    * The name of the action. Used as the unique id for reference
    * @member {String} name
    */
    name = undefined;
    /**
    * A list of tags for searching
    * @member {Array.<String>} tags
    */
    tags = undefined;
    /**
    * The variables required for the action
    * @member {Array.<module:model/ActionVariableResource>} variables
    */
    variables = undefined;






    /**
    * Allowed values for the <code>category</code> property.
    * @enum {String}
    * @readonly
    */
    static CategoryEnum = {
    
        /**
         * value: "achievement"
         * @const
         */
        "achievement": "achievement",
    
        /**
         * value: "behavior"
         * @const
         */
        "behavior": "behavior",
    
        /**
         * value: "comment"
         * @const
         */
        "comment": "comment",
    
        /**
         * value: "disposition"
         * @const
         */
        "disposition": "disposition",
    
        /**
         * value: "device"
         * @const
         */
        "device": "device",
    
        /**
         * value: "entitlement"
         * @const
         */
        "entitlement": "entitlement",
    
        /**
         * value: "friends"
         * @const
         */
        "friends": "friends",
    
        /**
         * value: "fulfillment"
         * @const
         */
        "fulfillment": "fulfillment",
    
        /**
         * value: "gamification"
         * @const
         */
        "gamification": "gamification",
    
        /**
         * value: "inventory"
         * @const
         */
        "inventory": "inventory",
    
        /**
         * value: "invoice"
         * @const
         */
        "invoice": "invoice",
    
        /**
         * value: "media"
         * @const
         */
        "media": "media",
    
        /**
         * value: "scheduler"
         * @const
         */
        "scheduler": "scheduler",
    
        /**
         * value: "store"
         * @const
         */
        "store": "store",
    
        /**
         * value: "subscription"
         * @const
         */
        "subscription": "subscription",
    
        /**
         * value: "user"
         * @const
         */
        "user": "user",
    
        /**
         * value: "wallet"
         * @const
         */
        "wallet": "wallet",
    
        /**
         * value: "custom"
         * @const
         */
        "custom": "custom",
    
        /**
         * value: "challenge"
         * @const
         */
        "challenge": "challenge",
    
        /**
         * value: "activity"
         * @const
         */
        "activity": "activity",
    
        /**
         * value: "campaign"
         * @const
         */
        "campaign": "campaign",
    
        /**
         * value: "event"
         * @const
         */
        "event": "event"    
    };



}


