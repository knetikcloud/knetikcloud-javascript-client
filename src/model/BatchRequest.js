/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The BatchRequest model module.
* @module model/BatchRequest
* @version 3.0.7
*/
export default class BatchRequest {
    /**
    * Constructs a new <code>BatchRequest</code>.
    * @alias module:model/BatchRequest
    * @class
    * @param body {Object} The request body as would be passed to the URI
    * @param contentType {String} Content type used, Ex:(application/json)
    * @param method {String} The HTTP method used, Ex: (GET)
    * @param timeout {Number} Time in seconds before process will timeout.  Default is 60.  Range is 1-300
    * @param uri {String} Full URI of REST call
    */

    constructor(body, contentType, method, timeout, uri) {
        

        
        

        this['body'] = body;this['content_type'] = contentType;this['method'] = method;this['timeout'] = timeout;this['uri'] = uri;

        
    }

    /**
    * Constructs a <code>BatchRequest</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/BatchRequest} obj Optional instance to populate.
    * @return {module:model/BatchRequest} The populated <code>BatchRequest</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchRequest();

            
            
            

            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], Object);
            }
            if (data.hasOwnProperty('content_type')) {
                obj['content_type'] = ApiClient.convertToType(data['content_type'], 'String');
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('timeout')) {
                obj['timeout'] = ApiClient.convertToType(data['timeout'], 'Number');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
    * The request body as would be passed to the URI
    * @member {Object} body
    */
    body = undefined;
    /**
    * Content type used, Ex:(application/json)
    * @member {String} content_type
    */
    content_type = undefined;
    /**
    * The HTTP method used, Ex: (GET)
    * @member {String} method
    */
    method = undefined;
    /**
    * Time in seconds before process will timeout.  Default is 60.  Range is 1-300
    * @member {Number} timeout
    */
    timeout = undefined;
    /**
    * The oauth token only
    * @member {String} token
    */
    token = undefined;
    /**
    * Full URI of REST call
    * @member {String} uri
    */
    uri = undefined;








}


