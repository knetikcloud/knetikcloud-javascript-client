/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import Behavior from './Behavior';
import BundledSku from './BundledSku';
import Property from './Property';
import Sku from './Sku';
import StoreItem from './StoreItem';





/**
* The BundleItem model module.
* @module model/BundleItem
* @version 3.0.7
*/
export default class BundleItem {
    /**
    * Constructs a new <code>BundleItem</code>.
    * @alias module:model/BundleItem
    * @class
    * @extends module:model/StoreItem
    * @param name {String} The name of the item
    * @param typeHint {String} The type of the item
    * @param skus {Array.<module:model/Sku>} The skus for the item. Each defines a unique configuration for the item to be purchased (Large-Blue, Small-Green, etc). These are what is ultimately selected in the store and added to the cart
    * @param vendorId {Number} The vendor who provides the item
    * @param bundledSkus {Array.<module:model/BundledSku>} The skus of items to be included in this bundle, and how they influence the bundle total price.  Must have at least one SKU
    */

    constructor(name, typeHint, skus, vendorId, bundledSkus) {
        

        StoreItem.call(this, name, typeHint, skus, vendorId);
        

        this['bundled_skus'] = bundledSkus;

        
    }

    /**
    * Constructs a <code>BundleItem</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/BundleItem} obj Optional instance to populate.
    * @return {module:model/BundleItem} The populated <code>BundleItem</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BundleItem();

            

            StoreItem.constructFromObject(data, obj);
            

            if (data.hasOwnProperty('bundled_skus')) {
                obj['bundled_skus'] = ApiClient.convertToType(data['bundled_skus'], [BundledSku]);
            }
        }
        return obj;
    }

    /**
    * The skus of items to be included in this bundle, and how they influence the bundle total price.  Must have at least one SKU
    * @member {Array.<module:model/BundledSku>} bundled_skus
    */
    bundled_skus = undefined;








}


