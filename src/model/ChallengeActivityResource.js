/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import ActivityEntitlementResource from './ActivityEntitlementResource';
import Property from './Property';
import RewardSetResource from './RewardSetResource';
import SelectedSettingResource from './SelectedSettingResource';





/**
* The ChallengeActivityResource model module.
* @module model/ChallengeActivityResource
* @version 3.0.7
*/
export default class ChallengeActivityResource {
    /**
    * Constructs a new <code>ChallengeActivityResource</code>.
    * @alias module:model/ChallengeActivityResource
    * @class
    * @param activityId {Number} The id of the activity
    */

    constructor(activityId) {
        

        
        

        this['activity_id'] = activityId;

        
    }

    /**
    * Constructs a <code>ChallengeActivityResource</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ChallengeActivityResource} obj Optional instance to populate.
    * @return {module:model/ChallengeActivityResource} The populated <code>ChallengeActivityResource</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChallengeActivityResource();

            
            
            

            if (data.hasOwnProperty('activity_id')) {
                obj['activity_id'] = ApiClient.convertToType(data['activity_id'], 'Number');
            }
            if (data.hasOwnProperty('additional_properties')) {
                obj['additional_properties'] = ApiClient.convertToType(data['additional_properties'], {'String': Property});
            }
            if (data.hasOwnProperty('challenge_id')) {
                obj['challenge_id'] = ApiClient.convertToType(data['challenge_id'], 'Number');
            }
            if (data.hasOwnProperty('entitlement')) {
                obj['entitlement'] = ActivityEntitlementResource.constructFromObject(data['entitlement']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('reward_set')) {
                obj['reward_set'] = RewardSetResource.constructFromObject(data['reward_set']);
            }
            if (data.hasOwnProperty('settings')) {
                obj['settings'] = ApiClient.convertToType(data['settings'], [SelectedSettingResource]);
            }
            if (data.hasOwnProperty('template')) {
                obj['template'] = ApiClient.convertToType(data['template'], 'String');
            }
        }
        return obj;
    }

    /**
    * The id of the activity
    * @member {Number} activity_id
    */
    activity_id = undefined;
    /**
    * A map of additional properties, keyed on the property name.  Must match the names and types defined in the template for this item type
    * @member {Object.<String, module:model/Property>} additional_properties
    */
    additional_properties = undefined;
    /**
    * The id of the challenge
    * @member {Number} challenge_id
    */
    challenge_id = undefined;
    /**
    * The entitlement item needed to participate in the activity as part of this event. Null indicates free entry. When creating/updating only id is used. Item must be pre-existing
    * @member {module:model/ActivityEntitlementResource} entitlement
    */
    entitlement = undefined;
    /**
    * The unique ID for this resource
    * @member {Number} id
    */
    id = undefined;
    /**
    * The rewards to give at the end of each occurence of the activity. When creating/updating only id is used. Reward set must be pre-existing
    * @member {module:model/RewardSetResource} reward_set
    */
    reward_set = undefined;
    /**
    * The list of settings and the select options
    * @member {Array.<module:model/SelectedSettingResource>} settings
    */
    settings = undefined;
    /**
    * A challenge activity template this challenge activity is validated against (private). May be null and no validation of additional_properties will be done
    * @member {String} template
    */
    template = undefined;








}


