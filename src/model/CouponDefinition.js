/**
 * Knetik Platform API Documentation Latest
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.KnetikPlatformApiDocumentationLatest) {
      root.KnetikPlatformApiDocumentationLatest = {};
    }
    root.KnetikPlatformApiDocumentationLatest.CouponDefinition = factory(root.KnetikPlatformApiDocumentationLatest.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The CouponDefinition model module.
   * @module model/CouponDefinition
   * @version Latest
   */

  /**
   * Constructs a new <code>CouponDefinition</code>.
   * @alias module:model/CouponDefinition
   * @class
   */
  var exports = function() {
    var _this = this;















  };

  /**
   * Constructs a <code>CouponDefinition</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CouponDefinition} obj Optional instance to populate.
   * @return {module:model/CouponDefinition} The populated <code>CouponDefinition</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('code')) {
        obj['code'] = ApiClient.convertToType(data['code'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('discount_type')) {
        obj['discount_type'] = ApiClient.convertToType(data['discount_type'], 'String');
      }
      if (data.hasOwnProperty('exclusive')) {
        obj['exclusive'] = ApiClient.convertToType(data['exclusive'], 'Boolean');
      }
      if (data.hasOwnProperty('max_discount')) {
        obj['max_discount'] = ApiClient.convertToType(data['max_discount'], 'Number');
      }
      if (data.hasOwnProperty('max_quantity')) {
        obj['max_quantity'] = ApiClient.convertToType(data['max_quantity'], 'Number');
      }
      if (data.hasOwnProperty('min_cart_total')) {
        obj['min_cart_total'] = ApiClient.convertToType(data['min_cart_total'], 'Number');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('self_exclusive')) {
        obj['self_exclusive'] = ApiClient.convertToType(data['self_exclusive'], 'Boolean');
      }
      if (data.hasOwnProperty('target_item_id')) {
        obj['target_item_id'] = ApiClient.convertToType(data['target_item_id'], 'Number');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('valid_for_tags')) {
        obj['valid_for_tags'] = ApiClient.convertToType(data['valid_for_tags'], ['String']);
      }
      if (data.hasOwnProperty('value')) {
        obj['value'] = ApiClient.convertToType(data['value'], 'Number');
      }
      if (data.hasOwnProperty('vendor_id')) {
        obj['vendor_id'] = ApiClient.convertToType(data['vendor_id'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {String} code
   */
  exports.prototype['code'] = undefined;
  /**
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {module:model/CouponDefinition.DiscountTypeEnum} discount_type
   */
  exports.prototype['discount_type'] = undefined;
  /**
   * @member {Boolean} exclusive
   */
  exports.prototype['exclusive'] = undefined;
  /**
   * @member {Number} max_discount
   */
  exports.prototype['max_discount'] = undefined;
  /**
   * @member {Number} max_quantity
   */
  exports.prototype['max_quantity'] = undefined;
  /**
   * @member {Number} min_cart_total
   */
  exports.prototype['min_cart_total'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {Boolean} self_exclusive
   */
  exports.prototype['self_exclusive'] = undefined;
  /**
   * @member {Number} target_item_id
   */
  exports.prototype['target_item_id'] = undefined;
  /**
   * @member {module:model/CouponDefinition.TypeEnum} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {Array.<String>} valid_for_tags
   */
  exports.prototype['valid_for_tags'] = undefined;
  /**
   * @member {Number} value
   */
  exports.prototype['value'] = undefined;
  /**
   * @member {Number} vendor_id
   */
  exports.prototype['vendor_id'] = undefined;


  /**
   * Allowed values for the <code>discount_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DiscountTypeEnum = {
    /**
     * value: "value"
     * @const
     */
    "value": "value",
    /**
     * value: "percentage"
     * @const
     */
    "percentage": "percentage"  };

  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "coupon_cart"
     * @const
     */
    "cart": "coupon_cart",
    /**
     * value: "coupon_single_item"
     * @const
     */
    "single_item": "coupon_single_item",
    /**
     * value: "coupon_voucher"
     * @const
     */
    "voucher": "coupon_voucher",
    /**
     * value: "coupon_vendor"
     * @const
     */
    "vendor": "coupon_vendor",
    /**
     * value: "coupon_tag"
     * @const
     */
    "tag": "coupon_tag"  };


  return exports;
}));


