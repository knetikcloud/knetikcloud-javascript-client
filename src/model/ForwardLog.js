/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The ForwardLog model module.
* @module model/ForwardLog
* @version 3.0.7
*/
export default class ForwardLog {
    /**
    * Constructs a new <code>ForwardLog</code>.
    * @alias module:model/ForwardLog
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>ForwardLog</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ForwardLog} obj Optional instance to populate.
    * @return {module:model/ForwardLog} The populated <code>ForwardLog</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ForwardLog();

            
            
            

            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Number');
            }
            if (data.hasOwnProperty('error_msg')) {
                obj['error_msg'] = ApiClient.convertToType(data['error_msg'], 'String');
            }
            if (data.hasOwnProperty('http_status_code')) {
                obj['http_status_code'] = ApiClient.convertToType(data['http_status_code'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('payload')) {
                obj['payload'] = ApiClient.convertToType(data['payload'], Object);
            }
            if (data.hasOwnProperty('response')) {
                obj['response'] = ApiClient.convertToType(data['response'], 'String');
            }
            if (data.hasOwnProperty('retry_count')) {
                obj['retry_count'] = ApiClient.convertToType(data['retry_count'], 'Number');
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
    * The end date of the forward log entry
    * @member {Number} end_date
    */
    end_date = undefined;
    /**
    * @member {String} error_msg
    */
    error_msg = undefined;
    /**
    * The http status code the forward log entry
    * @member {Number} http_status_code
    */
    http_status_code = undefined;
    /**
    * The id of the forward log entry
    * @member {String} id
    */
    id = undefined;
    /**
    * The payload of the forward log entry
    * @member {Object} payload
    */
    payload = undefined;
    /**
    * The response string of the forward log entry
    * @member {String} response
    */
    response = undefined;
    /**
    * The retry count of the forward log entry
    * @member {Number} retry_count
    */
    retry_count = undefined;
    /**
    * The start date of the forward log entry
    * @member {Number} start_date
    */
    start_date = undefined;
    /**
    * The endpoint url of the forward log entry
    * @member {String} url
    */
    url = undefined;








}


