/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The LookupTypeResource model module.
* @module model/LookupTypeResource
* @version 3.0.7
*/
export default class LookupTypeResource {
    /**
    * Constructs a new <code>LookupTypeResource</code>.
    * @alias module:model/LookupTypeResource
    * @class
    * @param description {String} The description of the expression type
    * @param keyType {String} The variable type the key expression must be, or null if it's dependent (see description for explanation in this case)
    * @param name {String} The name of the expression type
    * @param valueType {String} The variable type of the value this expression returns, or null if it's dependent (see description for explanation in this case)
    */

    constructor(description, keyType, name, valueType) {
        

        
        

        this['description'] = description;this['key_type'] = keyType;this['name'] = name;this['value_type'] = valueType;

        
    }

    /**
    * Constructs a <code>LookupTypeResource</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/LookupTypeResource} obj Optional instance to populate.
    * @return {module:model/LookupTypeResource} The populated <code>LookupTypeResource</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LookupTypeResource();

            
            
            

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('key_type')) {
                obj['key_type'] = ApiClient.convertToType(data['key_type'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('value_type')) {
                obj['value_type'] = ApiClient.convertToType(data['value_type'], 'String');
            }
        }
        return obj;
    }

    /**
    * The description of the expression type
    * @member {String} description
    */
    description = undefined;
    /**
    * The variable type the key expression must be, or null if it's dependent (see description for explanation in this case)
    * @member {String} key_type
    */
    key_type = undefined;
    /**
    * The name of the expression type
    * @member {String} name
    */
    name = undefined;
    /**
    * The variable type of the value this expression returns, or null if it's dependent (see description for explanation in this case)
    * @member {String} value_type
    */
    value_type = undefined;








}


