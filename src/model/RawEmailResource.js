/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The RawEmailResource model module.
* @module model/RawEmailResource
* @version 3.0.7
*/
export default class RawEmailResource {
    /**
    * Constructs a new <code>RawEmailResource</code>.
    * @alias module:model/RawEmailResource
    * @class
    * @param body {String} The body of the outgoing message.
    * @param recipients {Array.<Number>} A list of user ids to send the message to.
    * @param subject {String} The subject of the outgoing message.
    */

    constructor(body, recipients, subject) {
        

        
        

        this['body'] = body;this['recipients'] = recipients;this['subject'] = subject;

        
    }

    /**
    * Constructs a <code>RawEmailResource</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/RawEmailResource} obj Optional instance to populate.
    * @return {module:model/RawEmailResource} The populated <code>RawEmailResource</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RawEmailResource();

            
            
            

            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('html')) {
                obj['html'] = ApiClient.convertToType(data['html'], 'Boolean');
            }
            if (data.hasOwnProperty('recipients')) {
                obj['recipients'] = ApiClient.convertToType(data['recipients'], ['Number']);
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
        }
        return obj;
    }

    /**
    * The body of the outgoing message.
    * @member {String} body
    */
    body = undefined;
    /**
    * Address to attribute the outgoing message to. Optional if the config email.out_address is set.
    * @member {String} from
    */
    from = undefined;
    /**
    * Whether the body is to be treated as html. Default false.
    * @member {Boolean} html
    */
    html = undefined;
    /**
    * A list of user ids to send the message to.
    * @member {Array.<Number>} recipients
    */
    recipients = undefined;
    /**
    * The subject of the outgoing message.
    * @member {String} subject
    */
    subject = undefined;








}


