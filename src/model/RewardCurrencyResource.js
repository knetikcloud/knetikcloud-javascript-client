/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The RewardCurrencyResource model module.
* @module model/RewardCurrencyResource
* @version 3.0.7
*/
export default class RewardCurrencyResource {
    /**
    * Constructs a new <code>RewardCurrencyResource</code>.
    * @alias module:model/RewardCurrencyResource
    * @class
    * @param currencyCode {String} The code of the currency type to give
    * @param maxRank {Number} The highest number (worst) rank to give the reward to. Must be greater than or equal to minRank
    * @param minRank {Number} The lowest number (best) rank to give the reward to. Must be greater than zero
    * @param percent {Boolean} True if the value is actually a percentage of the intake
    * @param value {Number} The amount of currency to give. For percentage values, 0.5 is 50%
    */

    constructor(currencyCode, maxRank, minRank, percent, value) {
        

        
        

        this['currency_code'] = currencyCode;this['max_rank'] = maxRank;this['min_rank'] = minRank;this['percent'] = percent;this['value'] = value;

        
    }

    /**
    * Constructs a <code>RewardCurrencyResource</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/RewardCurrencyResource} obj Optional instance to populate.
    * @return {module:model/RewardCurrencyResource} The populated <code>RewardCurrencyResource</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RewardCurrencyResource();

            
            
            

            if (data.hasOwnProperty('currency_code')) {
                obj['currency_code'] = ApiClient.convertToType(data['currency_code'], 'String');
            }
            if (data.hasOwnProperty('currency_name')) {
                obj['currency_name'] = ApiClient.convertToType(data['currency_name'], 'String');
            }
            if (data.hasOwnProperty('max_rank')) {
                obj['max_rank'] = ApiClient.convertToType(data['max_rank'], 'Number');
            }
            if (data.hasOwnProperty('min_rank')) {
                obj['min_rank'] = ApiClient.convertToType(data['min_rank'], 'Number');
            }
            if (data.hasOwnProperty('percent')) {
                obj['percent'] = ApiClient.convertToType(data['percent'], 'Boolean');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }

    /**
    * The code of the currency type to give
    * @member {String} currency_code
    */
    currency_code = undefined;
    /**
    * The name of the currency reward to give.  Set by currency_code)
    * @member {String} currency_name
    */
    currency_name = undefined;
    /**
    * The highest number (worst) rank to give the reward to. Must be greater than or equal to minRank
    * @member {Number} max_rank
    */
    max_rank = undefined;
    /**
    * The lowest number (best) rank to give the reward to. Must be greater than zero
    * @member {Number} min_rank
    */
    min_rank = undefined;
    /**
    * True if the value is actually a percentage of the intake
    * @member {Boolean} percent
    */
    percent = undefined;
    /**
    * The amount of currency to give. For percentage values, 0.5 is 50%
    * @member {Number} value
    */
    value = undefined;








}


