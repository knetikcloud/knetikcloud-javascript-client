/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import Behavior from './Behavior';
import Property from './Property';
import Sku from './Sku';
import StoreItem from './StoreItem';





/**
* The ShippingItem model module.
* @module model/ShippingItem
* @version 3.0.7
*/
export default class ShippingItem {
    /**
    * Constructs a new <code>ShippingItem</code>.
    * @alias module:model/ShippingItem
    * @class
    * @extends module:model/StoreItem
    * @param name {String} The name of the item
    * @param typeHint {String} The type of the item
    * @param skus {Array.<module:model/Sku>} The skus for the item. Each defines a unique configuration for the item to be purchased (Large-Blue, Small-Green, etc). These are what is ultimately selected in the store and added to the cart
    * @param vendorId {Number} The vendor who provides the item
    * @param maxTierTotal {Number} An abstract max value that the values of item's shipping_tier work against to decide whether an order can be fulfilled
    */

    constructor(name, typeHint, skus, vendorId, maxTierTotal) {
        

        StoreItem.call(this, name, typeHint, skus, vendorId);
        

        this['max_tier_total'] = maxTierTotal;

        
    }

    /**
    * Constructs a <code>ShippingItem</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ShippingItem} obj Optional instance to populate.
    * @return {module:model/ShippingItem} The populated <code>ShippingItem</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShippingItem();

            

            StoreItem.constructFromObject(data, obj);
            

            if (data.hasOwnProperty('countries')) {
                obj['countries'] = ApiClient.convertToType(data['countries'], ['String']);
            }
            if (data.hasOwnProperty('max_tier_total')) {
                obj['max_tier_total'] = ApiClient.convertToType(data['max_tier_total'], 'Number');
            }
            if (data.hasOwnProperty('taxable')) {
                obj['taxable'] = ApiClient.convertToType(data['taxable'], 'Boolean');
            }
        }
        return obj;
    }

    /**
    * A unique list of country iso3 codes that allow the shipping option
    * @member {Array.<String>} countries
    */
    countries = undefined;
    /**
    * An abstract max value that the values of item's shipping_tier work against to decide whether an order can be fulfilled
    * @member {Number} max_tier_total
    */
    max_tier_total = undefined;
    /**
    * Whether tax should be applied to the shipping price.  Default = false
    * @member {Boolean} taxable
    */
    taxable = undefined;








}


