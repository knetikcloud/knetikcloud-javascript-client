/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import UserAchievementResource from './UserAchievementResource';





/**
* The UserAchievementGroupResource model module.
* @module model/UserAchievementGroupResource
* @version 3.0.7
*/
export default class UserAchievementGroupResource {
    /**
    * Constructs a new <code>UserAchievementGroupResource</code>.
    * @alias module:model/UserAchievementGroupResource
    * @class
    * @param achievements {Array.<module:model/UserAchievementResource>} The list of achievements associated with the group
    * @param groupName {String} The name of the group.  If used by Leveling, this will represent the level name
    * @param progress {Number} The current progress of the user on the group
    * @param userId {Number} The id of the user whose progress is being tracked
    */

    constructor(achievements, groupName, progress, userId) {
        

        
        

        this['achievements'] = achievements;this['group_name'] = groupName;this['progress'] = progress;this['user_id'] = userId;

        
    }

    /**
    * Constructs a <code>UserAchievementGroupResource</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/UserAchievementGroupResource} obj Optional instance to populate.
    * @return {module:model/UserAchievementGroupResource} The populated <code>UserAchievementGroupResource</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserAchievementGroupResource();

            
            
            

            if (data.hasOwnProperty('achievements')) {
                obj['achievements'] = ApiClient.convertToType(data['achievements'], [UserAchievementResource]);
            }
            if (data.hasOwnProperty('group_name')) {
                obj['group_name'] = ApiClient.convertToType(data['group_name'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('progress')) {
                obj['progress'] = ApiClient.convertToType(data['progress'], 'Number');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
        }
        return obj;
    }

    /**
    * The list of achievements associated with the group
    * @member {Array.<module:model/UserAchievementResource>} achievements
    */
    achievements = undefined;
    /**
    * The name of the group.  If used by Leveling, this will represent the level name
    * @member {String} group_name
    */
    group_name = undefined;
    /**
    * The id of the achievement progress
    * @member {String} id
    */
    id = undefined;
    /**
    * The current progress of the user on the group
    * @member {Number} progress
    */
    progress = undefined;
    /**
    * The id of the user whose progress is being tracked
    * @member {Number} user_id
    */
    user_id = undefined;








}


