/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The UserActionLog model module.
* @module model/UserActionLog
* @version 3.0.7
*/
export default class UserActionLog {
    /**
    * Constructs a new <code>UserActionLog</code>.
    * @alias module:model/UserActionLog
    * @class
    * @param actionDescription {String} A description of the action taken
    * @param actionName {String} The name of the action taken
    */

    constructor(actionDescription, actionName) {
        

        
        

        this['action_description'] = actionDescription;this['action_name'] = actionName;

        
    }

    /**
    * Constructs a <code>UserActionLog</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/UserActionLog} obj Optional instance to populate.
    * @return {module:model/UserActionLog} The populated <code>UserActionLog</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserActionLog();

            
            
            

            if (data.hasOwnProperty('action_description')) {
                obj['action_description'] = ApiClient.convertToType(data['action_description'], 'String');
            }
            if (data.hasOwnProperty('action_name')) {
                obj['action_name'] = ApiClient.convertToType(data['action_name'], 'String');
            }
            if (data.hasOwnProperty('created_date')) {
                obj['created_date'] = ApiClient.convertToType(data['created_date'], 'Number');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], {'String': 'String'});
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('request_id')) {
                obj['request_id'] = ApiClient.convertToType(data['request_id'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
        }
        return obj;
    }

    /**
    * A description of the action taken
    * @member {String} action_description
    */
    action_description = undefined;
    /**
    * The name of the action taken
    * @member {String} action_name
    */
    action_name = undefined;
    /**
    * The date of the action, unix timestamp in seconds
    * @member {Number} created_date
    */
    created_date = undefined;
    /**
    * A map of additional details such as the target of the action
    * @member {Object.<String, String>} details
    */
    details = undefined;
    /**
    * The id of the log entry
    * @member {String} id
    */
    id = undefined;
    /**
    * The id of the api request that spawned the action, if generated internally
    * @member {String} request_id
    */
    request_id = undefined;
    /**
    * The id of the user that took the action, if any. Read-only if not posting with LOGS_ADMIN
    * @member {Number} user_id
    */
    user_id = undefined;








}


