/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import RewardCurrencyResource from './RewardCurrencyResource';
import RewardItemResource from './RewardItemResource';
import SimpleUserResource from './SimpleUserResource';





/**
* The UserActivityResults model module.
* @module model/UserActivityResults
* @version 3.0.7
*/
export default class UserActivityResults {
    /**
    * Constructs a new <code>UserActivityResults</code>.
    * @alias module:model/UserActivityResults
    * @class
    * @param user {module:model/SimpleUserResource} The player for this entry
    */

    constructor(user) {
        

        
        

        this['user'] = user;

        
    }

    /**
    * Constructs a <code>UserActivityResults</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/UserActivityResults} obj Optional instance to populate.
    * @return {module:model/UserActivityResults} The populated <code>UserActivityResults</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserActivityResults();

            
            
            

            if (data.hasOwnProperty('currency_rewards')) {
                obj['currency_rewards'] = ApiClient.convertToType(data['currency_rewards'], [RewardCurrencyResource]);
            }
            if (data.hasOwnProperty('item_rewards')) {
                obj['item_rewards'] = ApiClient.convertToType(data['item_rewards'], [RewardItemResource]);
            }
            if (data.hasOwnProperty('rank')) {
                obj['rank'] = ApiClient.convertToType(data['rank'], 'Number');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('ties')) {
                obj['ties'] = ApiClient.convertToType(data['ties'], 'Number');
            }
            if (data.hasOwnProperty('updated_date')) {
                obj['updated_date'] = ApiClient.convertToType(data['updated_date'], 'Number');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = SimpleUserResource.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
    * Any currency rewarded to this user
    * @member {Array.<module:model/RewardCurrencyResource>} currency_rewards
    */
    currency_rewards = undefined;
    /**
    * Any items rewarded to this user
    * @member {Array.<module:model/RewardItemResource>} item_rewards
    */
    item_rewards = undefined;
    /**
    * The position of the user in the leaderboard. Null means non-compete or disqualification
    * @member {Number} rank
    */
    rank = undefined;
    /**
    * The raw score in this leaderboard. Null means non-compete or disqualification
    * @member {Number} score
    */
    score = undefined;
    /**
    * Any tags for the metric. Each unique tag will translate into a unique leaderboard. Maximum 5 tags and 50 characters each
    * @member {Array.<String>} tags
    */
    tags = undefined;
    /**
    * The number of users tied at this rank, including this user. 1 means no tie
    * @member {Number} ties
    */
    ties = undefined;
    /**
    * The date this score was recorded or updated. Unix timestamp in seconds
    * @member {Number} updated_date
    */
    updated_date = undefined;
    /**
    * The player for this entry
    * @member {module:model/SimpleUserResource} user
    */
    user = undefined;








}


