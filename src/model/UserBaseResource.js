/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The UserBaseResource model module.
* @module model/UserBaseResource
* @version 3.0.7
*/
export default class UserBaseResource {
    /**
    * Constructs a new <code>UserBaseResource</code>.
    * @alias module:model/UserBaseResource
    * @class
    * @param email {String} The user's email address (private). May be required and/or unique depending on system configuration (both on by default). Must match standard email requirements if provided (RFC 2822)
    * @param username {String} The login username for the user (private). May be set to match email if system does not require usernames separately.
    */

    constructor(email, username) {
        

        
        

        this['email'] = email;this['username'] = username;

        
    }

    /**
    * Constructs a <code>UserBaseResource</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/UserBaseResource} obj Optional instance to populate.
    * @return {module:model/UserBaseResource} The populated <code>UserBaseResource</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserBaseResource();

            
            
            

            if (data.hasOwnProperty('avatar_url')) {
                obj['avatar_url'] = ApiClient.convertToType(data['avatar_url'], 'String');
            }
            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('fullname')) {
                obj['fullname'] = ApiClient.convertToType(data['fullname'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('last_activity')) {
                obj['last_activity'] = ApiClient.convertToType(data['last_activity'], 'Number');
            }
            if (data.hasOwnProperty('last_updated')) {
                obj['last_updated'] = ApiClient.convertToType(data['last_updated'], 'Number');
            }
            if (data.hasOwnProperty('member_since')) {
                obj['member_since'] = ApiClient.convertToType(data['member_since'], 'Number');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
    * The url of the user's avatar image
    * @member {String} avatar_url
    */
    avatar_url = undefined;
    /**
    * The chosen display name of the user, defaults to username if not present
    * @member {String} display_name
    */
    display_name = undefined;
    /**
    * The user's email address (private). May be required and/or unique depending on system configuration (both on by default). Must match standard email requirements if provided (RFC 2822)
    * @member {String} email
    */
    email = undefined;
    /**
    * The user's full name (private)
    * @member {String} fullname
    */
    fullname = undefined;
    /**
    * The id of the user
    * @member {Number} id
    */
    id = undefined;
    /**
    * The date the user last interacted with the API (private)
    * @member {Number} last_activity
    */
    last_activity = undefined;
    /**
    * The date the user's info was last updated as a unix timestamp
    * @member {Number} last_updated
    */
    last_updated = undefined;
    /**
    * The user's date of registration as a unix timestamp
    * @member {Number} member_since
    */
    member_since = undefined;
    /**
    * The login username for the user (private). May be set to match email if system does not require usernames separately.
    * @member {String} username
    */
    username = undefined;








}


