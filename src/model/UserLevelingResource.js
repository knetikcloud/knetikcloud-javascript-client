/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The UserLevelingResource model module.
* @module model/UserLevelingResource
* @version 3.0.7
*/
export default class UserLevelingResource {
    /**
    * Constructs a new <code>UserLevelingResource</code>.
    * @alias module:model/UserLevelingResource
    * @class
    * @param lastTierName {String} The name of the last tier the user has qualified for
    * @param lastTierProgress {Number} The progress level of the last tier the user has qualified for
    * @param levelName {String} The name of the level schema
    * @param nextTierName {String} The name of the next tier the user can qualify for
    * @param nextTierProgress {Number} The progress needed to qualify for the next tier
    * @param progress {Number} The amount of progress the user has
    * @param tierNames {Array.<String>} The names of the tiers the user has qualified for
    * @param userId {Number} The ID of the user
    */

    constructor(lastTierName, lastTierProgress, levelName, nextTierName, nextTierProgress, progress, tierNames, userId) {
        

        
        

        this['last_tier_name'] = lastTierName;this['last_tier_progress'] = lastTierProgress;this['level_name'] = levelName;this['next_tier_name'] = nextTierName;this['next_tier_progress'] = nextTierProgress;this['progress'] = progress;this['tier_names'] = tierNames;this['user_id'] = userId;

        
    }

    /**
    * Constructs a <code>UserLevelingResource</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/UserLevelingResource} obj Optional instance to populate.
    * @return {module:model/UserLevelingResource} The populated <code>UserLevelingResource</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserLevelingResource();

            
            
            

            if (data.hasOwnProperty('last_tier_name')) {
                obj['last_tier_name'] = ApiClient.convertToType(data['last_tier_name'], 'String');
            }
            if (data.hasOwnProperty('last_tier_progress')) {
                obj['last_tier_progress'] = ApiClient.convertToType(data['last_tier_progress'], 'Number');
            }
            if (data.hasOwnProperty('level_name')) {
                obj['level_name'] = ApiClient.convertToType(data['level_name'], 'String');
            }
            if (data.hasOwnProperty('next_tier_name')) {
                obj['next_tier_name'] = ApiClient.convertToType(data['next_tier_name'], 'String');
            }
            if (data.hasOwnProperty('next_tier_progress')) {
                obj['next_tier_progress'] = ApiClient.convertToType(data['next_tier_progress'], 'Number');
            }
            if (data.hasOwnProperty('progress')) {
                obj['progress'] = ApiClient.convertToType(data['progress'], 'Number');
            }
            if (data.hasOwnProperty('tier_names')) {
                obj['tier_names'] = ApiClient.convertToType(data['tier_names'], ['String']);
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
        }
        return obj;
    }

    /**
    * The name of the last tier the user has qualified for
    * @member {String} last_tier_name
    */
    last_tier_name = undefined;
    /**
    * The progress level of the last tier the user has qualified for
    * @member {Number} last_tier_progress
    */
    last_tier_progress = undefined;
    /**
    * The name of the level schema
    * @member {String} level_name
    */
    level_name = undefined;
    /**
    * The name of the next tier the user can qualify for
    * @member {String} next_tier_name
    */
    next_tier_name = undefined;
    /**
    * The progress needed to qualify for the next tier
    * @member {Number} next_tier_progress
    */
    next_tier_progress = undefined;
    /**
    * The amount of progress the user has
    * @member {Number} progress
    */
    progress = undefined;
    /**
    * The names of the tiers the user has qualified for
    * @member {Array.<String>} tier_names
    */
    tier_names = undefined;
    /**
    * The ID of the user
    * @member {Number} user_id
    */
    user_id = undefined;








}


