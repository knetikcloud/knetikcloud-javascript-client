/**
 * Knetik Platform API Documentation Latest
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Artist', 'model/CollectionVideoContribution', 'model/User', 'model/VideoTag'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Artist'), require('./CollectionVideoContribution'), require('./User'), require('./VideoTag'));
  } else {
    // Browser globals (root is window)
    if (!root.KnetikPlatformApiDocumentationLatest) {
      root.KnetikPlatformApiDocumentationLatest = {};
    }
    root.KnetikPlatformApiDocumentationLatest.Video = factory(root.KnetikPlatformApiDocumentationLatest.ApiClient, root.KnetikPlatformApiDocumentationLatest.Artist, root.KnetikPlatformApiDocumentationLatest.CollectionVideoContribution, root.KnetikPlatformApiDocumentationLatest.User, root.KnetikPlatformApiDocumentationLatest.VideoTag);
  }
}(this, function(ApiClient, Artist, CollectionVideoContribution, User, VideoTag) {
  'use strict';




  /**
   * The Video model module.
   * @module model/Video
   * @version Latest
   */

  /**
   * Constructs a new <code>Video</code>.
   * @alias module:model/Video
   * @class
   */
  var exports = function() {
    var _this = this;






























  };

  /**
   * Constructs a <code>Video</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Video} obj Optional instance to populate.
   * @return {module:model/Video} The populated <code>Video</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('active')) {
        obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
      }
      if (data.hasOwnProperty('author')) {
        obj['author'] = Artist.constructFromObject(data['author']);
      }
      if (data.hasOwnProperty('authored')) {
        obj['authored'] = ApiClient.convertToType(data['authored'], 'Number');
      }
      if (data.hasOwnProperty('banned')) {
        obj['banned'] = ApiClient.convertToType(data['banned'], 'Boolean');
      }
      if (data.hasOwnProperty('category_id')) {
        obj['category_id'] = ApiClient.convertToType(data['category_id'], 'String');
      }
      if (data.hasOwnProperty('category_name')) {
        obj['category_name'] = ApiClient.convertToType(data['category_name'], 'String');
      }
      if (data.hasOwnProperty('contributors')) {
        obj['contributors'] = CollectionVideoContribution.constructFromObject(data['contributors']);
      }
      if (data.hasOwnProperty('created')) {
        obj['created'] = ApiClient.convertToType(data['created'], 'Number');
      }
      if (data.hasOwnProperty('embed')) {
        obj['embed'] = ApiClient.convertToType(data['embed'], 'String');
      }
      if (data.hasOwnProperty('extension')) {
        obj['extension'] = ApiClient.convertToType(data['extension'], 'String');
      }
      if (data.hasOwnProperty('height')) {
        obj['height'] = ApiClient.convertToType(data['height'], 'Number');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('length')) {
        obj['length'] = ApiClient.convertToType(data['length'], 'Number');
      }
      if (data.hasOwnProperty('location')) {
        obj['location'] = ApiClient.convertToType(data['location'], 'String');
      }
      if (data.hasOwnProperty('long_description')) {
        obj['long_description'] = ApiClient.convertToType(data['long_description'], 'String');
      }
      if (data.hasOwnProperty('mime_type')) {
        obj['mime_type'] = ApiClient.convertToType(data['mime_type'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('priority')) {
        obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
      }
      if (data.hasOwnProperty('privacy')) {
        obj['privacy'] = ApiClient.convertToType(data['privacy'], 'String');
      }
      if (data.hasOwnProperty('published')) {
        obj['published'] = ApiClient.convertToType(data['published'], 'Boolean');
      }
      if (data.hasOwnProperty('short_description')) {
        obj['short_description'] = ApiClient.convertToType(data['short_description'], 'String');
      }
      if (data.hasOwnProperty('size')) {
        obj['size'] = ApiClient.convertToType(data['size'], 'Number');
      }
      if (data.hasOwnProperty('tags')) {
        obj['tags'] = ApiClient.convertToType(data['tags'], [VideoTag]);
      }
      if (data.hasOwnProperty('thumbnail')) {
        obj['thumbnail'] = ApiClient.convertToType(data['thumbnail'], 'String');
      }
      if (data.hasOwnProperty('updated')) {
        obj['updated'] = ApiClient.convertToType(data['updated'], 'Number');
      }
      if (data.hasOwnProperty('uploader')) {
        obj['uploader'] = User.constructFromObject(data['uploader']);
      }
      if (data.hasOwnProperty('views')) {
        obj['views'] = ApiClient.convertToType(data['views'], 'Number');
      }
      if (data.hasOwnProperty('whitelist')) {
        obj['whitelist'] = ApiClient.convertToType(data['whitelist'], [User]);
      }
      if (data.hasOwnProperty('width')) {
        obj['width'] = ApiClient.convertToType(data['width'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {Boolean} active
   */
  exports.prototype['active'] = undefined;
  /**
   * @member {module:model/Artist} author
   */
  exports.prototype['author'] = undefined;
  /**
   * @member {Number} authored
   */
  exports.prototype['authored'] = undefined;
  /**
   * @member {Boolean} banned
   */
  exports.prototype['banned'] = undefined;
  /**
   * @member {String} category_id
   */
  exports.prototype['category_id'] = undefined;
  /**
   * @member {String} category_name
   */
  exports.prototype['category_name'] = undefined;
  /**
   * @member {module:model/CollectionVideoContribution} contributors
   */
  exports.prototype['contributors'] = undefined;
  /**
   * @member {Number} created
   */
  exports.prototype['created'] = undefined;
  /**
   * @member {String} embed
   */
  exports.prototype['embed'] = undefined;
  /**
   * @member {String} extension
   */
  exports.prototype['extension'] = undefined;
  /**
   * @member {Number} height
   */
  exports.prototype['height'] = undefined;
  /**
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {Number} length
   */
  exports.prototype['length'] = undefined;
  /**
   * @member {String} location
   */
  exports.prototype['location'] = undefined;
  /**
   * @member {String} long_description
   */
  exports.prototype['long_description'] = undefined;
  /**
   * @member {String} mime_type
   */
  exports.prototype['mime_type'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {Number} priority
   */
  exports.prototype['priority'] = undefined;
  /**
   * @member {module:model/Video.PrivacyEnum} privacy
   */
  exports.prototype['privacy'] = undefined;
  /**
   * @member {Boolean} published
   */
  exports.prototype['published'] = undefined;
  /**
   * @member {String} short_description
   */
  exports.prototype['short_description'] = undefined;
  /**
   * @member {Number} size
   */
  exports.prototype['size'] = undefined;
  /**
   * @member {Array.<module:model/VideoTag>} tags
   */
  exports.prototype['tags'] = undefined;
  /**
   * @member {String} thumbnail
   */
  exports.prototype['thumbnail'] = undefined;
  /**
   * @member {Number} updated
   */
  exports.prototype['updated'] = undefined;
  /**
   * @member {module:model/User} uploader
   */
  exports.prototype['uploader'] = undefined;
  /**
   * @member {Number} views
   */
  exports.prototype['views'] = undefined;
  /**
   * @member {Array.<module:model/User>} whitelist
   */
  exports.prototype['whitelist'] = undefined;
  /**
   * @member {Number} width
   */
  exports.prototype['width'] = undefined;


  /**
   * Allowed values for the <code>privacy</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PrivacyEnum = {
    /**
     * value: "private"
     * @const
     */
    "private": "private",
    /**
     * value: "friends"
     * @const
     */
    "friends": "friends",
    /**
     * value: "public"
     * @const
     */
    "public": "public"  };


  return exports;
}));


