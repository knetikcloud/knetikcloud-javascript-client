/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import SimpleUserResource from './SimpleUserResource';





/**
* The WalletTransactionResource model module.
* @module model/WalletTransactionResource
* @version 3.0.7
*/
export default class WalletTransactionResource {
    /**
    * Constructs a new <code>WalletTransactionResource</code>.
    * @alias module:model/WalletTransactionResource
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>WalletTransactionResource</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/WalletTransactionResource} obj Optional instance to populate.
    * @return {module:model/WalletTransactionResource} The populated <code>WalletTransactionResource</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WalletTransactionResource();

            
            
            

            if (data.hasOwnProperty('balance')) {
                obj['balance'] = ApiClient.convertToType(data['balance'], 'Number');
            }
            if (data.hasOwnProperty('create_date')) {
                obj['create_date'] = ApiClient.convertToType(data['create_date'], 'Number');
            }
            if (data.hasOwnProperty('currency_code')) {
                obj['currency_code'] = ApiClient.convertToType(data['currency_code'], 'String');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('invoice_id')) {
                obj['invoice_id'] = ApiClient.convertToType(data['invoice_id'], 'Number');
            }
            if (data.hasOwnProperty('is_refunded')) {
                obj['is_refunded'] = ApiClient.convertToType(data['is_refunded'], 'Boolean');
            }
            if (data.hasOwnProperty('response')) {
                obj['response'] = ApiClient.convertToType(data['response'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('successful')) {
                obj['successful'] = ApiClient.convertToType(data['successful'], 'Boolean');
            }
            if (data.hasOwnProperty('transaction_id')) {
                obj['transaction_id'] = ApiClient.convertToType(data['transaction_id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('type_hint')) {
                obj['type_hint'] = ApiClient.convertToType(data['type_hint'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = SimpleUserResource.constructFromObject(data['user']);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
            if (data.hasOwnProperty('wallet_id')) {
                obj['wallet_id'] = ApiClient.convertToType(data['wallet_id'], 'Number');
            }
        }
        return obj;
    }

    /**
    * The new balance of the wallet after the transaction
    * @member {Number} balance
    */
    balance = undefined;
    /**
    * The unix timestamp in seconds of the transaction
    * @member {Number} create_date
    */
    create_date = undefined;
    /**
    * The code of the currency for the transaction
    * @member {String} currency_code
    */
    currency_code = undefined;
    /**
    * The specific details of the transaction, such as a message from the admin that created it
    * @member {String} details
    */
    details = undefined;
    /**
    * The id of the transaction
    * @member {Number} id
    */
    id = undefined;
    /**
    * The id of the invoice that spawned the transaction, if any
    * @member {Number} invoice_id
    */
    invoice_id = undefined;
    /**
    * Whether the transaction has been refunded
    * @member {Boolean} is_refunded
    */
    is_refunded = undefined;
    /**
    * The response
    * @member {String} response
    */
    response = undefined;
    /**
    * The root source of the transaction
    * @member {module:model/WalletTransactionResource.SourceEnum} source
    */
    source = undefined;
    /**
    * If the transaction was successful
    * @member {Boolean} successful
    */
    successful = undefined;
    /**
    * The payment gateway (external) transaction ID
    * @member {String} transaction_id
    */
    transaction_id = undefined;
    /**
    * The general type of the transaction
    * @member {String} type
    */
    type = undefined;
    /**
    * The table name of the subclass
    * @member {String} type_hint
    */
    type_hint = undefined;
    /**
    * The owner of the wallet
    * @member {module:model/SimpleUserResource} user
    */
    user = undefined;
    /**
    * The amount of the transaction, positive if a gain, negative if an expenditure
    * @member {Number} value
    */
    value = undefined;
    /**
    * The id of the wallet this transaction affected
    * @member {Number} wallet_id
    */
    wallet_id = undefined;






    /**
    * Allowed values for the <code>source</code> property.
    * @enum {String}
    * @readonly
    */
    static SourceEnum = {
    
        /**
         * value: "digital"
         * @const
         */
        "digital": "digital",
    
        /**
         * value: "physical"
         * @const
         */
        "physical": "physical"    
    };



}


