/**
 * Knetik Platform API Documentation Latest
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KnetikPlatformApiDocumentationLatest);
  }
}(this, function(expect, KnetikPlatformApiDocumentationLatest) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KnetikPlatformApiDocumentationLatest.CampaignsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CampaignsApi', function() {
    describe('addChallengesUsingPOST', function() {
      it('should call addChallengesUsingPOST successfully', function(done) {
        //uncomment below and update the code to test addChallengesUsingPOST
        //instance.addChallengesUsingPOST(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCampaignTemplateUsingPOST', function() {
      it('should call createCampaignTemplateUsingPOST successfully', function(done) {
        //uncomment below and update the code to test createCampaignTemplateUsingPOST
        //instance.createCampaignTemplateUsingPOST(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCampaignUsingPOST', function() {
      it('should call createCampaignUsingPOST successfully', function(done) {
        //uncomment below and update the code to test createCampaignUsingPOST
        //instance.createCampaignUsingPOST(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCampaignTemplateUsingDELETE', function() {
      it('should call deleteCampaignTemplateUsingDELETE successfully', function(done) {
        //uncomment below and update the code to test deleteCampaignTemplateUsingDELETE
        //instance.deleteCampaignTemplateUsingDELETE(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCampaignUsingDELETE', function() {
      it('should call deleteCampaignUsingDELETE successfully', function(done) {
        //uncomment below and update the code to test deleteCampaignUsingDELETE
        //instance.deleteCampaignUsingDELETE(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCampaignTemplateUsingGET', function() {
      it('should call getCampaignTemplateUsingGET successfully', function(done) {
        //uncomment below and update the code to test getCampaignTemplateUsingGET
        //instance.getCampaignTemplateUsingGET(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCampaignTemplatesUsingGET', function() {
      it('should call getCampaignTemplatesUsingGET successfully', function(done) {
        //uncomment below and update the code to test getCampaignTemplatesUsingGET
        //instance.getCampaignTemplatesUsingGET(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCampaignUsingGET', function() {
      it('should call getCampaignUsingGET successfully', function(done) {
        //uncomment below and update the code to test getCampaignUsingGET
        //instance.getCampaignUsingGET(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCampaignsUsingGET', function() {
      it('should call getCampaignsUsingGET successfully', function(done) {
        //uncomment below and update the code to test getCampaignsUsingGET
        //instance.getCampaignsUsingGET(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChallengesUsingGET', function() {
      it('should call getChallengesUsingGET successfully', function(done) {
        //uncomment below and update the code to test getChallengesUsingGET
        //instance.getChallengesUsingGET(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeChallengeUsingDELETE', function() {
      it('should call removeChallengeUsingDELETE successfully', function(done) {
        //uncomment below and update the code to test removeChallengeUsingDELETE
        //instance.removeChallengeUsingDELETE(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCampaignTemplateUsingPUT', function() {
      it('should call updateCampaignTemplateUsingPUT successfully', function(done) {
        //uncomment below and update the code to test updateCampaignTemplateUsingPUT
        //instance.updateCampaignTemplateUsingPUT(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCampaignUsingPUT', function() {
      it('should call updateCampaignUsingPUT successfully', function(done) {
        //uncomment below and update the code to test updateCampaignUsingPUT
        //instance.updateCampaignUsingPUT(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
