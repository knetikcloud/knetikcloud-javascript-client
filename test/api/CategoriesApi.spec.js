/**
 * Knetik Platform API Documentation Latest
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KnetikPlatformApiDocumentationLatest);
  }
}(this, function(expect, KnetikPlatformApiDocumentationLatest) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KnetikPlatformApiDocumentationLatest.CategoriesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CategoriesApi', function() {
    describe('createCategoryUsingPOST', function() {
      it('should call createCategoryUsingPOST successfully', function(done) {
        //uncomment below and update the code to test createCategoryUsingPOST
        //instance.createCategoryUsingPOST(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTemplateUsingPOST2', function() {
      it('should call createTemplateUsingPOST2 successfully', function(done) {
        //uncomment below and update the code to test createTemplateUsingPOST2
        //instance.createTemplateUsingPOST2(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCategoryUsingDELETE', function() {
      it('should call deleteCategoryUsingDELETE successfully', function(done) {
        //uncomment below and update the code to test deleteCategoryUsingDELETE
        //instance.deleteCategoryUsingDELETE(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTemplateUsingDELETE1', function() {
      it('should call deleteTemplateUsingDELETE1 successfully', function(done) {
        //uncomment below and update the code to test deleteTemplateUsingDELETE1
        //instance.deleteTemplateUsingDELETE1(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getArticleTemplatesUsingGET1', function() {
      it('should call getArticleTemplatesUsingGET1 successfully', function(done) {
        //uncomment below and update the code to test getArticleTemplatesUsingGET1
        //instance.getArticleTemplatesUsingGET1(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCategoriesUsingGET1', function() {
      it('should call getCategoriesUsingGET1 successfully', function(done) {
        //uncomment below and update the code to test getCategoriesUsingGET1
        //instance.getCategoriesUsingGET1(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCategoryUsingGET1', function() {
      it('should call getCategoryUsingGET1 successfully', function(done) {
        //uncomment below and update the code to test getCategoryUsingGET1
        //instance.getCategoryUsingGET1(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTagsUsingGET', function() {
      it('should call getTagsUsingGET successfully', function(done) {
        //uncomment below and update the code to test getTagsUsingGET
        //instance.getTagsUsingGET(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTemplateUsingGET1', function() {
      it('should call getTemplateUsingGET1 successfully', function(done) {
        //uncomment below and update the code to test getTemplateUsingGET1
        //instance.getTemplateUsingGET1(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCategoryUsingPUT1', function() {
      it('should call updateCategoryUsingPUT1 successfully', function(done) {
        //uncomment below and update the code to test updateCategoryUsingPUT1
        //instance.updateCategoryUsingPUT1(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTemplateUsingPUT2', function() {
      it('should call updateTemplateUsingPUT2 successfully', function(done) {
        //uncomment below and update the code to test updateTemplateUsingPUT2
        //instance.updateTemplateUsingPUT2(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
