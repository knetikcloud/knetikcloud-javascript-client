/**
 * Knetik Platform API Documentation Latest
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KnetikPlatformApiDocumentationLatest);
  }
}(this, function(expect, KnetikPlatformApiDocumentationLatest) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KnetikPlatformApiDocumentationLatest.UsersInventoryApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsersInventoryApi', function() {
    describe('addItemUsingPOST1', function() {
      it('should call addItemUsingPOST1 successfully', function(done) {
        //uncomment below and update the code to test addItemUsingPOST1
        //instance.addItemUsingPOST1(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createItemUsingPOST', function() {
      it('should call createItemUsingPOST successfully', function(done) {
        //uncomment below and update the code to test createItemUsingPOST
        //instance.createItemUsingPOST(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTemplateUsingPOST3', function() {
      it('should call createTemplateUsingPOST3 successfully', function(done) {
        //uncomment below and update the code to test createTemplateUsingPOST3
        //instance.createTemplateUsingPOST3(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEntitlementTemplateUsingDELETE', function() {
      it('should call deleteEntitlementTemplateUsingDELETE successfully', function(done) {
        //uncomment below and update the code to test deleteEntitlementTemplateUsingDELETE
        //instance.deleteEntitlementTemplateUsingDELETE(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteItemUsingDELETE', function() {
      it('should call deleteItemUsingDELETE successfully', function(done) {
        //uncomment below and update the code to test deleteItemUsingDELETE
        //instance.deleteItemUsingDELETE(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('entitlementCheckUsingGET', function() {
      it('should call entitlementCheckUsingGET successfully', function(done) {
        //uncomment below and update the code to test entitlementCheckUsingGET
        //instance.entitlementCheckUsingGET(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('entitlementUseUsingPOST', function() {
      it('should call entitlementUseUsingPOST successfully', function(done) {
        //uncomment below and update the code to test entitlementUseUsingPOST
        //instance.entitlementUseUsingPOST(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCurrenciesUsingGET1', function() {
      it('should call getCurrenciesUsingGET1 successfully', function(done) {
        //uncomment below and update the code to test getCurrenciesUsingGET1
        //instance.getCurrenciesUsingGET1(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEntitlementTemplateUsingGET', function() {
      it('should call getEntitlementTemplateUsingGET successfully', function(done) {
        //uncomment below and update the code to test getEntitlementTemplateUsingGET
        //instance.getEntitlementTemplateUsingGET(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEntitlementTemplatesUsingGET', function() {
      it('should call getEntitlementTemplatesUsingGET successfully', function(done) {
        //uncomment below and update the code to test getEntitlementTemplatesUsingGET
        //instance.getEntitlementTemplatesUsingGET(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInventoryListUsingGET', function() {
      it('should call getInventoryListUsingGET successfully', function(done) {
        //uncomment below and update the code to test getInventoryListUsingGET
        //instance.getInventoryListUsingGET(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInventoryUsingGET', function() {
      it('should call getInventoryUsingGET successfully', function(done) {
        //uncomment below and update the code to test getInventoryUsingGET
        //instance.getInventoryUsingGET(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getItemUsingGET', function() {
      it('should call getItemUsingGET successfully', function(done) {
        //uncomment below and update the code to test getItemUsingGET
        //instance.getItemUsingGET(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserInventoryListUsingGET', function() {
      it('should call getUserInventoryListUsingGET successfully', function(done) {
        //uncomment below and update the code to test getUserInventoryListUsingGET
        //instance.getUserInventoryListUsingGET(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserInventoryLogUsingGET', function() {
      it('should call getUserInventoryLogUsingGET successfully', function(done) {
        //uncomment below and update the code to test getUserInventoryLogUsingGET
        //instance.getUserInventoryLogUsingGET(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateItemUsingPUT1', function() {
      it('should call updateItemUsingPUT1 successfully', function(done) {
        //uncomment below and update the code to test updateItemUsingPUT1
        //instance.updateItemUsingPUT1(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTemplateUsingPUT3', function() {
      it('should call updateTemplateUsingPUT3 successfully', function(done) {
        //uncomment below and update the code to test updateTemplateUsingPUT3
        //instance.updateTemplateUsingPUT3(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUserInventoryBehaviorDataUsingPUT', function() {
      it('should call updateUserInventoryBehaviorDataUsingPUT successfully', function(done) {
        //uncomment below and update the code to test updateUserInventoryBehaviorDataUsingPUT
        //instance.updateUserInventoryBehaviorDataUsingPUT(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUserInventoryExpiresUsingPUT', function() {
      it('should call updateUserInventoryExpiresUsingPUT successfully', function(done) {
        //uncomment below and update the code to test updateUserInventoryExpiresUsingPUT
        //instance.updateUserInventoryExpiresUsingPUT(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUserInventoryStatusUsingPUT', function() {
      it('should call updateUserInventoryStatusUsingPUT successfully', function(done) {
        //uncomment below and update the code to test updateUserInventoryStatusUsingPUT
        //instance.updateUserInventoryStatusUsingPUT(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
