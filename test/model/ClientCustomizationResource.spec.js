/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KnetikCloud);
  }
}(this, function(expect, KnetikCloud) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KnetikCloud.ClientCustomizationResource();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ClientCustomizationResource', function() {
    it('should create an instance of ClientCustomizationResource', function() {
      // uncomment below and update the code to test ClientCustomizationResource
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be.a(KnetikCloud.ClientCustomizationResource);
    });

    it('should have the property credentialText (base name: "credential_text")', function() {
      // uncomment below and update the code to test the property credentialText
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be();
    });

    it('should have the property customCssUrl (base name: "custom_css_url")', function() {
      // uncomment below and update the code to test the property customCssUrl
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be();
    });

    it('should have the property faviconUrl (base name: "favicon_url")', function() {
      // uncomment below and update the code to test the property faviconUrl
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be();
    });

    it('should have the property footer (base name: "footer")', function() {
      // uncomment below and update the code to test the property footer
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be();
    });

    it('should have the property forgotPasswordText (base name: "forgot_password_text")', function() {
      // uncomment below and update the code to test the property forgotPasswordText
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be();
    });

    it('should have the property forgotPasswordUrl (base name: "forgot_password_url")', function() {
      // uncomment below and update the code to test the property forgotPasswordUrl
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be();
    });

    it('should have the property forgotUsernameText (base name: "forgot_username_text")', function() {
      // uncomment below and update the code to test the property forgotUsernameText
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be();
    });

    it('should have the property forgotUsernameUrl (base name: "forgot_username_url")', function() {
      // uncomment below and update the code to test the property forgotUsernameUrl
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be();
    });

    it('should have the property header (base name: "header")', function() {
      // uncomment below and update the code to test the property header
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be();
    });

    it('should have the property invalidLoginText (base name: "invalid_login_text")', function() {
      // uncomment below and update the code to test the property invalidLoginText
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be();
    });

    it('should have the property loginButtonText (base name: "login_button_text")', function() {
      // uncomment below and update the code to test the property loginButtonText
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be();
    });

    it('should have the property logoutText (base name: "logout_text")', function() {
      // uncomment below and update the code to test the property logoutText
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be();
    });

    it('should have the property passwordPlaceholder (base name: "password_placeholder")', function() {
      // uncomment below and update the code to test the property passwordPlaceholder
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be();
    });

    it('should have the property providerText (base name: "provider_text")', function() {
      // uncomment below and update the code to test the property providerText
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be();
    });

    it('should have the property signUpText (base name: "sign_up_text")', function() {
      // uncomment below and update the code to test the property signUpText
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be();
    });

    it('should have the property signUpUrl (base name: "sign_up_url")', function() {
      // uncomment below and update the code to test the property signUpUrl
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be();
    });

    it('should have the property usernamePlaceholder (base name: "username_placeholder")', function() {
      // uncomment below and update the code to test the property usernamePlaceholder
      //var instane = new KnetikCloud.ClientCustomizationResource();
      //expect(instance).to.be();
    });

  });

}));
