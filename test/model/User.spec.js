/**
 * Knetik Platform API Documentation Latest
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KnetikPlatformApiDocumentationLatest);
  }
}(this, function(expect, KnetikPlatformApiDocumentationLatest) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KnetikPlatformApiDocumentationLatest.User();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('User', function() {
    it('should create an instance of User', function() {
      // uncomment below and update the code to test User
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be.a(KnetikPlatformApiDocumentationLatest.User);
    });

    it('should have the property additionalProperties (base name: "additional_properties")', function() {
      // uncomment below and update the code to test the property additionalProperties
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property address2 (base name: "address2")', function() {
      // uncomment below and update the code to test the property address2
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property affiliate (base name: "affiliate")', function() {
      // uncomment below and update the code to test the property affiliate
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property avatarUrl (base name: "avatar_url")', function() {
      // uncomment below and update the code to test the property avatarUrl
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property children (base name: "children")', function() {
      // uncomment below and update the code to test the property children
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property dateCreated (base name: "date_created")', function() {
      // uncomment below and update the code to test the property dateCreated
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property dateOfBirth (base name: "date_of_birth")', function() {
      // uncomment below and update the code to test the property dateOfBirth
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property dateUpdated (base name: "date_updated")', function() {
      // uncomment below and update the code to test the property dateUpdated
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "display_name")', function() {
      // uncomment below and update the code to test the property displayName
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "first_name")', function() {
      // uncomment below and update the code to test the property firstName
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property fullname (base name: "fullname")', function() {
      // uncomment below and update the code to test the property fullname
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property gender (base name: "gender")', function() {
      // uncomment below and update the code to test the property gender
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property groups (base name: "groups")', function() {
      // uncomment below and update the code to test the property groups
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property guest (base name: "guest")', function() {
      // uncomment below and update the code to test the property guest
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property inviteToken (base name: "invite_token")', function() {
      // uncomment below and update the code to test the property inviteToken
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property lang (base name: "lang")', function() {
      // uncomment below and update the code to test the property lang
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property lastActivity (base name: "last_activity")', function() {
      // uncomment below and update the code to test the property lastActivity
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property lastLogin (base name: "last_login")', function() {
      // uncomment below and update the code to test the property lastLogin
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "last_name")', function() {
      // uncomment below and update the code to test the property lastName
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property lockoutAttempts (base name: "lockout_attempts")', function() {
      // uncomment below and update the code to test the property lockoutAttempts
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property lockoutDate (base name: "lockout_date")', function() {
      // uncomment below and update the code to test the property lockoutDate
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property mobileNumber (base name: "mobile_number")', function() {
      // uncomment below and update the code to test the property mobileNumber
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property oldId (base name: "old_id")', function() {
      // uncomment below and update the code to test the property oldId
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property parents (base name: "parents")', function() {
      // uncomment below and update the code to test the property parents
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property postalCode (base name: "postal_code")', function() {
      // uncomment below and update the code to test the property postalCode
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property propertiesString (base name: "properties_string")', function() {
      // uncomment below and update the code to test the property propertiesString
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property roles (base name: "roles")', function() {
      // uncomment below and update the code to test the property roles
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property tagStrings (base name: "tag_strings")', function() {
      // uncomment below and update the code to test the property tagStrings
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property template (base name: "template")', function() {
      // uncomment below and update the code to test the property template
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property timezone (base name: "timezone")', function() {
      // uncomment below and update the code to test the property timezone
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property token (base name: "token")', function() {
      // uncomment below and update the code to test the property token
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property typeHint (base name: "type_hint")', function() {
      // uncomment below and update the code to test the property typeHint
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instane = new KnetikPlatformApiDocumentationLatest.User();
      //expect(instance).to.be();
    });

  });

}));
