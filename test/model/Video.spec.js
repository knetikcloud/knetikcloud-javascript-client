/**
 * Knetik Platform API Documentation Latest
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://demo.sandbox.knetikcloud.com
 *
 * OpenAPI spec version: Latest
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KnetikPlatformApiDocumentationLatest);
  }
}(this, function(expect, KnetikPlatformApiDocumentationLatest) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KnetikPlatformApiDocumentationLatest.Video();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Video', function() {
    it('should create an instance of Video', function() {
      // uncomment below and update the code to test Video
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be.a(KnetikPlatformApiDocumentationLatest.Video);
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property author (base name: "author")', function() {
      // uncomment below and update the code to test the property author
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property authored (base name: "authored")', function() {
      // uncomment below and update the code to test the property authored
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property banned (base name: "banned")', function() {
      // uncomment below and update the code to test the property banned
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property categoryId (base name: "category_id")', function() {
      // uncomment below and update the code to test the property categoryId
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property categoryName (base name: "category_name")', function() {
      // uncomment below and update the code to test the property categoryName
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property contributors (base name: "contributors")', function() {
      // uncomment below and update the code to test the property contributors
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property embed (base name: "embed")', function() {
      // uncomment below and update the code to test the property embed
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property extension (base name: "extension")', function() {
      // uncomment below and update the code to test the property extension
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property length (base name: "length")', function() {
      // uncomment below and update the code to test the property length
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property longDescription (base name: "long_description")', function() {
      // uncomment below and update the code to test the property longDescription
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property mimeType (base name: "mime_type")', function() {
      // uncomment below and update the code to test the property mimeType
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property priority (base name: "priority")', function() {
      // uncomment below and update the code to test the property priority
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property privacy (base name: "privacy")', function() {
      // uncomment below and update the code to test the property privacy
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property published (base name: "published")', function() {
      // uncomment below and update the code to test the property published
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property shortDescription (base name: "short_description")', function() {
      // uncomment below and update the code to test the property shortDescription
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property size (base name: "size")', function() {
      // uncomment below and update the code to test the property size
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property thumbnail (base name: "thumbnail")', function() {
      // uncomment below and update the code to test the property thumbnail
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property updated (base name: "updated")', function() {
      // uncomment below and update the code to test the property updated
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property uploader (base name: "uploader")', function() {
      // uncomment below and update the code to test the property uploader
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property views (base name: "views")', function() {
      // uncomment below and update the code to test the property views
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property whitelist (base name: "whitelist")', function() {
      // uncomment below and update the code to test the property whitelist
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "width")', function() {
      // uncomment below and update the code to test the property width
      //var instane = new KnetikPlatformApiDocumentationLatest.Video();
      //expect(instance).to.be();
    });

  });

}));
